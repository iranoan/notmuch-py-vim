*notmuch-py-vim.jax* メールの読み書きを手助けする

Author:  Iranoan <iranoan+vim@gmail.com>
Repository: https://github.com/iranoan/notmuch-py-vim
License: GPL Ver.3.


==============================================================================
                                                   *notmuch-python-vim-contents*
目次~

	* 概要                                          |notmuch-python-introduction|
		- 欠点                                        |notmuch-python-vim-demerit|
	* 要件                                          |notmuch-python-vim-require|
		- あれば便利になるツール                      |notmuch-python-vim-add|
	* インストール                                  |notmuch-python-vim-install|
	* 使用方法                                      |notmuch-python-vim-use|
		- デフォルト・レイアウト                      |notmuch-python-vim-layout|
		- デフォルト・キーマップ                      |notmuch-python-vim-keymap|
		- デフォルト・キーマップ (送信メール)         |notmuch-python-vim-draft-keymap|
		- {S-WIN} 詳細                                |notmuch_virtual_header|
		- 送信メール・バッファの使用法                |notmuch-python-vim-sendmail|
			+ 暗号化・電子署名の指定方法                |notmuch-python-vim-encrypt|
		- 関連付け                                    |notmuch-python-vim-associate|
	* 設定/オプション                               |notmuch-python-vim-custom|
		- deoplete.nvim 使用時の注意                  |notmuch-python-vim-deoplete|
		- オプション                                  |notmuch-python-vim-option|
	* コマンド                                      |notmuch-python-vim-command|
		- サブコマンド                                |notmuch-python-vim-subcommand|
	* 作成動機                                      |notmuch-python-vim-how-make|
	* 更新履歴                                      |notmuch-python-vim-history|


==============================================================================
                                                   *notmuch-python-introduction*
概要~

notmuch-python-vim は Notmuch (https://notmuchmail.org/) と連携して、メールの
読み書きを手助けする

Notmuch には元々送受信機能がないので、送信には sendmail 等、受信には fetchmail
等のプログラムが別途必要

同種のプラグインとしては、notmuch-vim (https://github.com/felipec/notmuch-vim)
が有るが、自分の使いたい機能がなかったので作成 (|notmuch-python-vim-how-make|)

------------------------------------------------------------------------------
                                                    *notmuch-python-vim-demerit*
欠点~

メール数が多い検索条件だとスレッド一覧の表示に時間がかかる
	* Ubuntu 23.10
	* Linux kernel 6.5.0
	* VIM - Vi IMproved 9.0
	* CPU: 12th Gen Intel© Core™ i7-1270P×16
	* Memory: 32 GB
の環境で、約 28000 通にヒットする検索条件のスレッド一覧の表示に 18 秒ほど

                                                                   *search-term*
NOTE: 以下、Notmuch を用いる検索条件は |search-term| と記載する

個人的には今の所、普段は 3 ヶ月以内のメールのみ一覧するように |search-term| を指
定している

タグの操作で複数指定をできるようにしたため、通常 Vim では | (バー) で区切ると
複数個のコマンド指定ができるが、それができない

==============================================================================
                                                    *notmuch-python-vim-require*
要件~
 >
Vim~

* NeoVim では動作しない
* Ver. 9.0 以上
* >
	$ vim --version | grep +python3
<  他には +folding 等も必要だが、調べきれていない

Notmuch~

Notmuch をセットアップし、 >
	$ notmuch new
でデータベースを作成しておく必要が有る

Notmuch が動作条件なので、対応しているメール・ボックスの種類は Maildir, MH の
いずれかになる

Python Ver.3.5 以上~

加えて Python Ver.3 の notmuch2, html2text パッケージが必要

Ubuntu 等の Debian 系なら >
	$ sudo apt install -y python3-notmuch2 python3-html2text
<
他では例えば >
	$ python3 -m pip install notmuch2 html2text

MTA~

メール送信には、別途 sendmail 等の MTA と |g:notmuch_send_param| の設定が必要

------------------------------------------------------------------------------
                                                        *notmuch-python-vim-add*
あれば便利になるツール~

必須ではないがあれば、有用なツールや Python のパッケージがある

NKF (https://ja.osdn.net/projects/nkf/)~

JIS (iso-2022-jp) としつつ JIS 外漢字を含むメールは多いが、nkf が実行可能な環境
ならば、デコード失敗時に nkf で変換する

python-magic (https://github.com/ahupp/python-magic)~

ファイル添付時に拡張子から MIME Type が類推できない時に用いる

Ubuntu 等の Debian 系なら >
	$ sudo apt install -y python3-magic
<
他では例えば >
	$ python3 -m pip install python-magic

chardet (https://github.com/chardet/chardet)~

テキスト・ファイル添付時に文字コードの類推に用いる

Ubuntu 等の Debian 系なら >
	$ sudo apt install -y python3-chardet
<
他では例えば >
	$ python3 -m pip install chardet


==============================================================================
                                                    *notmuch-python-vim-install*
インストール~

使用しているパッケージ・マネージャに従えば良い

Vundle (https://github.com/gmarik/vundle)~
>
	Plug 'iranoan/notmuch-py-vim'

Vim-Plug (https://github.com/junegunn/vim-plug)~
>
	Plug 'iranoan/notmuch-py-vim'

NeoBundle (https://github.com/Shougo/neobundle.vim)~
>
	NeoBundle 'iranoan/notmuch-py-vim'

dein.nvim (https://github.com/Shougo/dein.vim)~
>
	call dein#add('iranoan/notmuch-py-vim')

Vim packadd~
>
	$ git clone https://github.com/iranoan/notmuch-py-vim ~/.vim/pack/iranoan/start/notmuch-py-vim
<	遅延読み込みをさせるなら >
	$ git clone https://github.com/iranoan/notmuch-py-vim ~/.vim/pack/iranoan/opt/notmuch-py-vim
<	~/.vim/vimrc などの設定ファイルに次のような記載を加える >
		augroup loadNotmuchPy
			autocmd!
			autocmd CmdUndefined Notmuch packadd notmuch-py-vim
		augroup END


==============================================================================
                                                        *notmuch-python-vim-use*
使用方法~

次のように起動する >
	$ vim +'Notmuch start'
<Vim 起動後なら >
	:Notmuch start

------------------------------------------------------------------------------
                                                     *notmuch-python-vim-layout*
デフォルト・レイアウト~

デフォルトでは >
	:Notmuch start
<で次のレイアウトで起動する
                                                        *{F-WIN}* *{T-WIN}* *{S-WIN}*
	+-----------+------------------------------------------------+
	|           |                                                |
	|           |                |{T-WIN}|                         |
	|           |                                                |
	|           +------------------------------------------------+
	|           |                                                |
	|  |{F-WIN}|  |                                                |
	|           |                                                |
	|           |                |{S-WIN}|                         |
	|           |                                                |
	|           |                                                |
	|           |                                                |
	|           |                                                |
	+-----------+------------------------------------------------+

|{F-WIN}|
	* 擬似的なメール・フォルダのフォルダー・ツリー
	* |g:notmuch_folders| の見出し部分を表示し |search-term| 部分が |{T-WIN}|/|{S-WIN}|
	  に隠れた状態で開かれる
	* |:bwipeout| すると他の |{T-WIN}|/|{S-WIN}| や未編集の送信メール・バッファ
	  (|notmuch-python-vim-sending-buffer|) も閉じる
|{T-WIN}|
	* スレッド・ツリー
	* デフォルトでは全体の 1/4 程度の高さ
	* |{S-WIN}| のウィンドウが有れば、カーソル位置のメールを |{S-WIN}| に表示する
	* 次の一部のタグは行頭に最大 3 つを絵文字で情報表示
		- 折り畳まれている場合は、折り畳まれているメール全てを対象
			タグ				絵文字~
			unread				📩
			draft					📝
			flagged				⭐
			Trash					🗑
			attachment		📎
			encrypted			🔑
			signed				🖋️
	* ステータス・バーに全タグなどの情報を表示
	* |zn| を無効にしている
|{S-WIN}|
	* メールのヘッダ・本文表示
	* |statusline| の設定がなければ、ステータス・バーに次を表示するように設定
		- サブジェクト
		- 日付
		- カーソル位置の
			+ バイト/桁位置
			+ 行番号
			+ 文字コード

------------------------------------------------------------------------------
                                                     *notmuch-python-vim-keymap*
デフォルト・キーマップ ({F-WIN}, {T-WIN}, {S-WIN})~

<F1>			ヘルプでこの項目を開く
<leader>h
<Space>		未読ページダウン                |notmuch-python-vim-view-unread-page|
<BS>			メールのページアップ            |notmuch-python-vim-view-previous|
o					カーソル位置に応じて開く (Open)             *notmuch-python-vim-open*
					|{F-WIN}|	|{T-WIN}| を開く
					|{T-WIN}|	* |notmuch-python-vim-open| ではなくスレッド・ツリーの開
											閉状態をトグル                              |zA|
										* なお |{S-WIN}| のウィンドウが有ればカーソル移動だけで
											カーソルのメール内容を |{S-WIN}| で表示される
					|{S-WIN}|	次の順序で試みる
										(1) 折り畳まれていれば開く
										(2) Attach, HTML ヘッダ等の添付ファイルなら開く
										(3) カーソル位置が本文内に書かれた添付ファイル名なら開く
										(4) 一部のヘッダや HTML パート等の開閉
										(5) |g:notmuch_open_way|["open"] で指定されたコマンド実行
O					|{T-WIN}|	|{S-WIN}| を開く        |notmuch-python-vim-open|
					|{S-WIN}|	'conceallevel' が 0 の時は 3 に、それ以外の時は 0 にする
c					新規メール (Compose new mail)   |notmuch-python-vim-mail-new|
r					返信メール (Reply)              |notmuch-python-vim-mail-reply|
R					転送メール                      |notmuch-python-vim-mail-forward|
u					未読/既読トグル (toggle Unread) |notmuch-python-vim-tag-toggle|
					|{T-WIN}| では加えて次のメールを選択 (|j|)
J					次の未読メール (j の拡張)       |notmuch-python-vim-view-unread-mail|
d					メールの Trash タグをトグル (追加/削除) と既読化
					                                |notmuch-python-vim-tag-toggle|
					|{T-WIN}| では加えて次のメールを選択 (|j|)
a					タグの追加 (Add tag)            |notmuch-python-vim-tag-add|
A					タグの削除 (add tag の逆)       |notmuch-python-vim-tag-delete|
C					スレッドを繋げる (Connect thread) |notmuch-python-vim-thread-connect|
D					添付ファイルの削除              |notmuch-python-vim-attach-delete|
i					メール・インポート (Import)     |notmuch-python-vim-mail-import|
I					メール・エクスポート (import の逆) |notmuch-python-vim-mail-export|
p					|search-term| やメールの各種情報や OpenPGP, S/MIME 処理の詳細情報を
					ポップアップやコマンド・ラインで表示 (Popup information)
					                                |notmuch-python-vim-mail-info|
					表示されたポップアップはカーソル移動や C/X/Q/P/O/<Esc> で閉じる
P					|{S-WIN}|	'conceallevel' によって表示されていない HTML メール内のリ
										ンク URL をポップアップやコマンド・ラインで表示
s					|{F-WIN}|/|{T-WIN}|  検索一覧 (Search)
					                                |notmuch-python-vim-search|
					|{S-WIN}|  添付ファイルを保存 (Save attach)
					                                |notmuch-python-vim-attach-save|
S					メール保存 (Save mail)          |notmuch-python-vim-mail-save|
<Tab>			ウィンドウを |{F-WIN}|→|{T-WIN}|→|{S-WIN}| とサイクリックに切り替え
					                                |CTRL-W_w|
<S-Tab>		サイクリックに上記とは逆順に切り替え |CTRL-W_W|
<leader>s	メール送信 (mail-send)          |notmuch-python-vim-mail-send|

-------------------------------------------------------------------------------
                                                *notmuch-python-vim-draft-keymap*
デフォルト・キーマップ (送信メール)~

送信メール・バッファ (|notmuch-python-vim-sending-buffer|) のデフォルト・キー
マップは次の通り

<F1>			ヘルプでこの項目を開く (Help)
<leader>h
<Leader>s	バッファをメール送信 (Send)     |notmuch-python-vim-mail-send|
<leader>f Fcc の設定                      |notmuch-python-vim-set-fcc|
<leader>c 添付ファイルの追加/変更         |notmuch-python-vim-set-attach|
<leader>e 暗号化/電子署名の設定           |notmuch-python-vim-set-encrypt|
<leader>a	タグの追加 (Add tag)            |notmuch-python-vim-tag-add|
<leader>d	タグの削除 (Delete tag)         |notmuch-python-vim-tag-delete|
<leader>A
<leader>t	タグの追加/削除をトグル (Toggle tag)
                                          |notmuch-python-vim-tag-toggle|
<leader>p	Message-ID 等メールの各種情報表示 (Popup information)
                                          |notmuch-python-vim-mail-info|
<leader>q バッファを閉じる (Quit)         |:quit|! /|:bwipeout|!

------------------------------------------------------------------------------
                                                        *notmuch_virtual_header*
{S-WIN} 詳細~

* まず先頭に |g:notmuch_show_headers|、次に |g:notmuch_show_hide_headers|
	に従い From, To, Subject, Date 等のヘッダを表示する
* それに続いて、次の仮想ヘッダを表示
		 追加するヘッダ		                意味~
		Attach:						添付ファイル名 (添付ファイル数だけ)
		HTML:							HTML メール (ファイル名の代わりに index.html)
		Decrypted:				暗号化メールを復号化した時の情報 (以下が主な例)
											S/MIME
											OpenPGP/MIME
											inline
		Not-Decrypted:		暗号化メールを復号していない時の上記情報
		Encrypt:					暗号化メールを復号していない時、そのファイル名
		PGP-Public-Key: 	添付された公開鍵
		Good-Signature:		正しい署名と検証された時、そのファイル名
		Bad-Signature:		不正な署名と判定された時、そのファイル名
		Signature:				対応する鍵がない時、その電子署名ファイル
	Example: >
		HTML: index.html
		Attach: attachment.zip
<		- どちらも削除されていれば、HTML:→Del-HTML: 等と Del- が先頭に付く
* これらのヘッダの後に本文が続き、text/plain と text/html パートの両方が含
	まれている時は、text/plain の後の >
		HTML part
<		に続いて text/html パートが折り畳まれた状態で表示される
* text/html しか無いメールの場合、折り畳まれずに表示される
* message/rfc822 等インライン表示可能な添付ファイルも同様に表示

------------------------------------------------------------------------------
                                                   *notmuch-python-vim-sendmail*
送信メール・バッファの使用法~

* mail-new (|notmuch-python-vim-mail-new|)     *notmuch-python-vim-sending-buffer*
* mail-reply (|notmuch-python-vim-mail-reply|)
* mail-forward (|notmuch-python-vim-mail-forward|)
で送信メール・バッファが開く

開く時に呼び出し元が |{F-WIN}| ならカーソル位置、他なら開いているメールと
|g:notmuch_to| の等の組み合わせで、To ヘッダが入力済みになる
	- この時点では署名は書き込まれない

送信メール・バッファに                                 *notmuch-python-vim-head*  >
	From:
	To:
	Cc:
	Bcc:
	Subject:
	Reply-To:
	Attach:
<のような内容が入力済みなので送信先や件名を書き込む

バッファを開いた時にどのヘッダ名が入力済みかは、|g:notmuch_draft_header|
で設定できる

実際に送信されない仮想ヘッダとして次のヘッダがある
		 追加するヘッダ			                意味~
		Attach:							添付ファイルのパスを指定
												複数添付する場合は、その数だけ指定する
												                           *notmuch-python-vim-attach*
		Fcc:								送信メールの保存先メール・フォルダの指定
												                              *notmuch-python-vim-fcc*
		Encrypt:						暗号化の方法指定   |notmuch-python-vim-encrypt|
		Signature:					電子署名の方法指定 |notmuch-python-vim-encrypt|
	* Attach は <leader>c でも指定可能    |notmuch-python-vim-set-attach|
	* Fcc の指定がなければ、送信済みメールは |g:notmuch_save_sent_mailbox| に従い保
		存される
		- <leader>f でも指定可能            |notmuch-python-vim-set-fcc|
	* Encrypt/Signature は <leader>e でも設定可能 |notmuch-python-vim-set-encrypt|

本文部分にカーソルが移動すると
	* |g:notmuch_from| などによって From ヘッダ
	* |g:notmuch_signature| によって連絡先などの署名
が入力される

実際の送信は <leader>s                  |notmuch-python-vim-mail-send|
	* 送信時は必須でないヘッダは「:」以降の内容がなければそのヘッダ自身がないもの
	  として処理する
	* メール送信には、別途 sendmail 等の MTA と |g:notmuch_send_param| の設定が必要

下書きの保存は普通に >
	:w
<(|:write|) などを使えばよく、再編集は mail-edit (|notmuch-python-vim-mail-edit|)

                                                    *notmuch-python-vim-encrypt*
暗号化・電子署名の指定方法~

* 予め GunPG などのツールの導入と準備を済ませておく必要がある
* <leader>e で設定可能                  |notmuch-python-vim-set-encrypt|
	- Encrypt, Signature ヘッダでを直接編集して暗号化・電子署名方法を S/MIME,
		PGP/MIME, PGP 等で指定する (詳細は |notmuch-python-vim-set-encrypt|)
* Encrypt, Signature 両方の指定があれば暗号化+電子署名の両方を行う
	- Encrypt, Signature の指定が異なっていれば、Encrypt の指定方法を用いる

------------------------------------------------------------------------------
                                                  *notmuch-python-vim-associate*
関連付け~

:Notmuch start をしていなくとも、送信メール・バッファ
(|notmuch-python-vim-sending-buffer|) は >
	$ vim +'Notmuch mail-new'
<でも開く >
	$ vim +'Notmuch mail-new vim@user.com'
	$ vim +'Notmuch mail-new mailto:vim-jp@user.com'
<とメールアドレス付きで起動すれば、To ヘッダに指定される

よってコマンド・オプション付きで、それぞれの環境に応じて関連付ければ、メール・
アドレスのダブル・クリックなどで送信メール・バッファが開かれる

==============================================================================
                                                     *notmuch-python-vim-custom*
設定/オプション~

------------------------------------------------------------------------------
                                                   *notmuch-python-vim-deoplete*
deoplete.nvim 使用時の注意~

送信メール・バッファ (|notmuch-python-vim-sending-buffer|) はデフォルトでは
deoplete (https://github.com/Shougo/deoplete.nvim) による snippet を用いた補完
対象外なので補完対象にする設定が必要

	Example: >
		call deoplete#custom#option({
			\ 'nofile_complete_filetypes' : ['denite-filter', 'notmuch-draft'],
			\ })

------------------------------------------------------------------------------
                                                     *notmuch-python-vim-option*
オプション~

g:notmuch_attachment_tmpdir                          *g:notmuch_attachment_tmpdir*
	Type: |String|
	Default: `''`

	* 添付ファイルを開いたとき一時的に保存されるフォルダ
	* `''` のときはこのプラグインの保存先の attach フォルダに保存

g:notmuch_command                                    *g:notmuch_command*
	Type: |Dictionary|

	* 使用できるサブコマンド (|notmuch-python-vim-subcommand|)
	* 通常変更する必要はないが、自作コマンドを追加した時に登録が必要

	Example: >
		let g:notmuch_command['subcommand']    = ['Funcref', executable]
<
		subcommand:	サブコマンド名
		Funcref:		実際に呼び出される関数名 (ラムダ式は未対応)
		executable:	実行される条件を次のビットごとの OR 演算で指定
								- 0x01:	引数を持つ、もしくは持てるか?
								- 0x02:	mark-command (|notmuch-python-vim-mark-command|) で
												呼び出し可能か?
								- 0x04:	|{F-WIN}|/|{T-WIN}|/|{S-WIN}| で使用可能か?
								- 0x08:	送信メール・バッファ
									(|notmuch-python-vim-sending-buffer|) で使用可能か?

g:notmuch_conceal_url                                *g:notmuch_conceal_url*
	Type: |Number|
	Default: `0`

	* |{S-WIN}| で HTML メール中のリンク先 URL を表示しない (conceal)
	* 非表示になっても、|'wrap'| で折り返されている分の縦方向のズレは残る

g:notmuch_date_format                                *g:notmuch_date_format*
	Type: |String|
	Default: `'%Y-%m-%d %H:%M'`

	* 次で表示する日時情報の書式
		- |{T-WIN}| の Date ヘッダ
		- |{S-WIN}| のステータス・バーに表示する Date ヘッダ
		- attach-delete (|notmuch-python-vim-attach-delete|),
			mail-export (|notmuch-python-vim-mail-export|),
			mail-info (|notmuch-python-vim-mail-info|)
			使用時のメール・ファイルの更新日時
	* Python strftime() メソッドを用いている (次が代表的な書式)
			%a: ローケルの曜日短縮表記
			%A: ローケルの曜日
			%b: ローケルの月短縮表記
			%B: ローケルの月
			%m: 月2桁
			%y: 西暦2桁
			%Y: 西暦4桁
			%H: 24時間制の時刻
			%h: 12時間制の時刻
			%p: AM/PM と等価なロケール表記
			%M: 2桁表記の分
			%S: 2桁表記の秒
	NOTE:
	https://docs.python.org/3/library/datetime.html?highlight=strftime#strftime-strptime-behavior
	https://docs.python.org/ja/3/library/datetime.html?highlight=strftime#strftime-strptime-behavior

g:notmuch_delete_top_subject                        *g:notmuch_delete_top_subject*
	Type: |String|
	Default: `r'^\s*((R[Ee][: ]*\d*)?\[[A-Za-z -]+(:\d+)?\](\s*R[Ee][: ])?\s*' +`
	` r'|(R[Ee][: ]*\d*)?\w+\.\d+:\d+\|( R[Ee][: ]\d+)? ?' + r'|R[Ee][: ]+)*[　 ]*'`

	* :Notmuch start より前に指定しないと無視される
	* |{T-WIN}| に表示する Subject ヘッダの内容の内、実際の表記で省略する部分
	* Vim では無く Python の正規表現で指定しなければならない

	Example: >
		let g:notmuch_delete_top_subject = '^\s*(\[[\w_-]+:\d+\](\s*R[Ee][: ])?\s*)+'

g:notmuch_display_item                              *g:notmuch_display_item*
	Type: |List|
	Default: `['Subject', 'From', 'Date']`

	* |{T-WIN}| で表示するヘッダの順序
	* 指定できるヘッダは Subject, From, Date のみ

g:notmuch_draft_header                                *g:notmuch_draft_header*
	Type: |List|
	Default: `['From', 'To', 'Cc', 'Bcc', 'Subject', 'Reply-To', 'Attach']`

	* 送信メール・バッファ (|notmuch-python-vim-sending-buffer|) を開いた時、入力
	  済みにしておくヘッダの順序
	* Attach ヘッダのみは、含まれていれば順序に関係なく、ヘッダの最後に入力

g:notmuch_folder_format                               *g:notmuch_folder_format*
	Type: |String|
	Default: `'{0:<??}{1:>??}/{2:>??}│{3:>??} [{4}]'`

	* |{F-WIN}| に表示する |g:notmuch_folders| の情報の表示方法
	* Python の format() メソッドの指定を用いる必要が有る
				         {} 内の最初の数値の意味~
				最初の数値		      意味~
				    0     		|g:notmuch_folders| の見出し部分
				    1     		未読 (unread タグ付き) メール数
				    2     		総メール数
				    3     		重要 (flagged タグ付き) メール数
				    4     		|g:notmuch_folders| の |search-term|

				   {} 内の残りの部分~
				      値            		  意味~
				:<                  		左詰め
				:>                  		右詰め
				上の <, > に続く数値		文字の桁数
	* Default で示している `'{0:<??}{1:>??}/{2:>??}│{3:>??} [{4}]'` の ?? の部
		分は、|g:notmuch_folders| の見出し部分の設定や個々の環境のメール数を元に
		計算される
	* Default を前提に、未読メール有りのフォルダを太字表示にしているので、変
		更した場合は >
			syntax match UnreadFolder /^.\+ *\([1-9]\|[1-9]\+[0-9]\+\)\/ *[0-9]\+│ *[0-9]\+ \[[^]]\+\]$/
<		の設定を書き換える必要性がある

	Example >
		let g:notmuch_folder_format = '{0:<14}{1:>3}/{2:>5}|{3:>3} [{4}]'`

g:notmuch_folders                                    *g:notmuch_folders*
	Type: |List|
	Default:`[`
		`\ [ 'new',       '(tag:inbox and tag:unread)' ],`
		`\ [ 'inbox',     'tag:inbox' ],`
		`\ [ 'unread',    'tag:unread' ],`
		`\ [ 'draft',     '((folder:draft or folder:.draft or tag:draft) not tag:sent not tag:Trash not tag:Spam)' ],`
		`\ [ 'attach',    'tag:attachment' ],`
		`\ [ '6 month',   'date:183days..now'],`
		`\ [ '',          '' ],`
		`\ [ 'All',       'path:**' ],`
		`\ [ 'Trash',     '(folder:.Trash or folder:Trash or tag:Trash)' ],`
		`\ [ 'New Search','' ],`
		`\ ]`

	* 検索条件のリスト
	* リスト内の要素は >
			['見出し', search-term]
<		をペアとする |List| で指定する
	* |search-term| は、Notmuch の検索方法
	* デフォルト・レイアウト (|notmuch-python-vim-layout|) では、|{F-WIN}| バッファに
		見出しだけを見せ、|search-term| が隠れるようにウィンドウを分割する
	NOTE: >
		$ man notmuch-search-terms
<	* 見出し、|search-term| の両方が `''` だと空行に変換
	* Default の [ 'New Search','' ] の様に `|search-term| だけ `''` だと、|{F-WIN}| の
		open (|notmuch-python-vim-open|) が search (|notmuch-python-vim-search|) 置き換わる

g:notmuch_from                                                  *g:notmuch_from*
	Type: |List|
	Default: `[]`

	* 送信メール・バッファ (|notmuch-python-vim-sending-buffer|) に書き込む From 内容
		- 返信メール (|notmuch-python-vim-mail-reply|) ではバッファを開いた時に書き込む
		- それ以外は本文部分にカーソル移動した時に書き込む
	* `[]` だと Notmuch の user.primary_email 設定 (~/.notmuch_config の次のような記載
		  部分) が使われる >
			[user]
			name=user name
			primary_email=vim@user.com
<	* リスト内の指定の一つ一つは |Dictionary| で
		{"id": "ニックネーム", "address": "From ヘッダへの入力内容", "To", "検索条件"}

		- To ヘッダが Python の正規表現検索に一致すれば、"address" の値が使われる
		- 一致する条件がなければ、"To":"*" を指定した要素が使われる
			Example >
				let g:notmuch_from = [
					\ {
					\     "id": "Vim",
					\     "address" : "Vim User <vim@user.com>",
					\     "To" : "",
					\ },
					\ {
					\     "id": "Vim-JP",
					\     "address" : "Vim User <vim-jp@user.com>",
					\     "To" : "",
					\ },
				\ ]
<			のような設定で "To":"*" もなく、From ヘッダが空のまま本文にカーソル移動すると、
			次の選択に移行する >
				Select using From:.  When only [Enter], use default (vim@user.com).
				1. Vim: Vim User <vim@user.com>
				2. Vim-JP: Vim User <vim-jp@user.com>
<		- "id" はこの選択時に区別しやすくする見出しで複数指定したときだけ意味が有る

g:notmuch_from_length                                *g:notmuch_from_length*
	Type: |Number|
	Default: `21`

	* |{T-WIN}| に表示する From (sent タグがついていれば To) ヘッダの内容を表示する幅

g:notmuch_ignore_tables                              *g:notmuch_ignore_tables*
	Type: |Number|
	Default: `0`

	* HTML メールの表タグを無視する

g:notmuch_import_mailbox                             *g:notmuch_import_mailbox*
	Type: |String|
	Default: `''`

	* インポート (mail-import: |notmuch-python-vim-mail-import|) したメールを取
		り込むフォルダ
	* `''` の場合はメール・ボックスのルート

g:notmuch_make_dump                                  *g:notmuch_make_dump*
	Type: |Number|
	Default: `0`

	* 0 でなければ、終了時に |g:notmuch_save_dir| notmuch dump --gzip の処理結果
		notmuch.gz を作成する

g:notmuch_mailbox_type                               *g:notmuch_mailbox_type*
	Type: |String|
	Default: `'Maildir'`

	* メール・ボックスの種類
	* 指定できるのは Maildir と MH のみ

g:notmuch_open_way                                   *g:notmuch_open_way*
	Type: |Dictionary|
	Default: `{`
		`\ 'folders': 'tabedit' ,`
		`\ 'thread' : 'rightbelow ??vnew' ,`
		`\ 'show'   : 'belowright ??new' ,`
		`\ 'search' : 'tabedit' ,`
		`\ 'edit'   : 'tabedit' ,`
		`\ 'view'   : 'belowright ??new',`
		`\ }`

	* ウィンドウや subcommand (|notmuch-python-vim-start|) 使用時の開き方
			  key				     subcommand~
			folders			|{F-WIN}|
			thread			|{T-WIN}|
			show				|{F-WIN}|
			search			search (|notmuch-python-vim-search|),
									search-address (|notmuch-python-vim-search-address|)
									search-thread (|notmuch-python-vim-search-thread|)
									search-duplication (|notmuch-python-vim-search-duplication|)
			edit				mail-edit (|notmuch-python-vim-mail-edit|)
			view				search/search-thread/search-duplication とペアになる |{S-WIN}|
			open				|{S-WIN}| で open (|notmuch-python-vim-open|) 使用時
									に最後に試みるコマンド
									- URL を開くなど好みのコマンドを指定可能
		- open 以外で値に指定できるのは、'new', 'vnew', 'tabedit', 'enew' と
			'rightbelow', 'belowright', 'topleft', 'botright' と数の組み合わせのみ
	* Default の ?? は、デフォルト・レイアウト (|notmuch-python-vim-layout|) が
		次を満たすように計算される
			|{F-WIN}|	|g:notmuch_folders| の見出しだけ表示し |search-term| が隠れる
								よう他のバッファで分割
			|{T-WIN}|	全体の 1/4 程度の高さのウィンドウで分割

	Example >
		let g:notmuch_open_way = {
			\ 'folders': 'tabedit' ,
			\ 'thread' : 'rightbelow 133vnew' ,
			\ 'show'   : 'belowright 34new' ,
			\ 'search' : 'tabedit' ,
			\ 'edit'   : 'tabedit' ,
			\ 'view'   : 'belowright 34new',
		\ }

g:notmuch_save_dir                                   *g:notmuch_save_dir*
	Type: |String|
	Default: `''`

	* 次の操作時のデフォルト保存/選択先
		- メール保存 (mail-save: |notmuch-python-vim-mail-save|)、
		- エクスポート (mail-export: |notmuch-python-vim-mail-export|)、
		- 添付ファイルの保存 (attach-save: |notmuch-python-vim-attach-save|)
		- 添付ファイルの追加 (set-attach: |notmuch-python-vim-set-attach|)
	* `''` の場合はカレント・フォルダ

g:notmuch_save_draft                                 *g:notmuch_save_draft*
	Type: |Number|
	Default: `0`

	* Fcc ヘッダの指定や |g:notmuch_save_sent_mailbox| に従った保存方法を指定
	* 0 なら、送信メールのデータそのもの
		- 文字コード変換、ヘッダと添付ファイルがエンコード済みデータになる
	* 1 だと編集バッファをほぼそのままプレイン・テキストとして保存
		- 文字コードは UTF-8
		- Content-Type: text/plain; charset="utf-8"
			Content-Transfer-Encoding: 8bit
			ヘッダの追加
		- Attach ヘッダは X-Attach ヘッダに名称変更

g:notmuch_save_sent_mailbox                          *g:notmuch_save_sent_mailbox*
	Type: |String|
	Default: なし

	* 送信済みメール (mail-import: |notmuch-python-vim-mail-import|) のデフォルト
		保存フォルダ
	* デフォルトではメール・フォルダのルート直下の sent フォルダ
	* `''` を指定すると、送信済みメールを保存しない

g:notmuch_send_encode                                *g:notmuch_send_encode*
	Type: |List|
	Default: `['us-ascii', 'iso-2022-jp', 'utf-8']`

	* 送信時のエンコード優先順位
	* エンコードを試みて失敗した場合に次の候補が用いられる
	* 最後の候補も失敗した時は BASE64 エンコード
	* テキスト・ファイルの添付時の文字コード判定にも使う

g:notmuch_send_param                                 *g:notmuch_send_param*
	Type: |List| or |Dictionary|
	Default: `['sendmail', '-t', '-oi']`

	* 送信時に使用するプログラムとそのパラメータ
	* |Dictionary| の場合は
		`{``
		`\ 'hoge\.com$': ['msmtp', '-t', '-a', 'Hoge', '-X', '-'],``
		`\ '*':          ['msmtp', '-t', '-a', 'Default', '-X', '-']``
		`\ }``
		の要領でキーによって送信方法分けられる
		- キー: From ヘッダのアドレスに Python の正規表現でマッチする文字列
			      * はデフォルト設定
		- 値:   送信時に使用するプログラムとそのパラメータ


g:notmuch_sent_tag                                   *g:notmuch_sent_tag*
	Type: |String|
	Default: `sent`

	* 送信メールに追加されるタグ

g:notmuch_show_headers                               *g:notmuch_show_headers*
	Type: |List|
	Default: `['From', 'Resent-From', 'Subject', 'Date', 'Resent-Date',`
		`'To', 'Resent-To', 'Cc', 'Resent-Cc', 'Bcc', 'Resent-Bcc',]`

	* |{S-WIN}| に表示するヘッダとその順序
	* これに続いて |g:notmuch_show_hide_headers| の指定ヘッダを折り畳んで表示し、更に
		- HTMLパートがあれば HTML ヘッダ
		- 添付ファイルの数だけ Attach ヘッダ
		などの仮想ヘッダ (|notmuch_virtual_header|) を表示

g:notmuch_show_hide_headers                          *g:notmuch_show_hide_headers*
	Type: |List|
	Default: `['Return-Path', 'Reply-To', 'Message-ID', 'Resent-Message-ID',`
		`'In-Reply-To', 'References', 'Errors-To',]`

	* |{S-WIN}| に折りたたみ表示されるヘッダとその順序
	* これに続いて
		- HTMLパートがあれば HTML ヘッダ
		- 添付ファイルの数だけ Attach ヘッダ
		などの仮想ヘッダ (|notmuch_virtual_header|) を表示

g:notmuch_signature                                  *g:notmuch_signature*
	Type: |Dictionary|
	Default: `{}`

	Example >
		let g:notmuch_signature = {
			\ '*'              : '~/.signature/default',
			\ 'vim-jp@user.com': '~/.signature/vim-jp',
			\ 'vim@user.com'   : '~/.signature/vim',
			\ }
<
	* 送信メール・バッファ (|notmuch-python-vim-sending-buffer|) の To の指定送信先/From
	  の送信元別に使用する署名ファイル
	* キーにそのメール・アドレスを、値に署名ファイルを指定
	* 複数設定が有る時のデフォルト署名ファイルはキーに `'*'` を設定する
	* すべての条件に一致する To アドレスがなければ、From のアドレスも確認する
	* 設定がなかったり、指定したファイルがない場合は ~/.signature 使用
	* ~/.signature も無ければ、何も書き込まない

g:notmuch_signature_prev_quote                       *g:notmuch_signature_prev_quote*
	Type: |Number|
	Default: `0`

	* 1 だと返信メールで署名の後に引用文を入力

g:notmuch_signature_prev_forward                    *g:notmuch_signature_prev_forward*
	Type: |Number|
	Default: `0`

	* 1 だと転送メールで署名の後に転送元本文を入力

g:notmuch_subject_length                            *g:notmuch_subject_length*
	Type: |Number|
	Default: なし

	* |{T-WIN}| に表示する Subject ヘッダの内容の幅
	* Subject の内容が長い場合は末尾が切られる
	* 短い場合は末尾が空白で埋められる
	* デフォルトではウィンドウ幅や他に表示される To/From/Date ヘッダの情報がウィ
		ンドウ幅に収まるように計算される

g:notmuch_tmpdir                                     *g:notmuch_tmpdir*
	Type: |String|
	Default: `''`

	* 送信処理などで一時保存が必要な時に使われるフォルダ
	* `''` の時はこのプラグイン保存先の .temp フォルダに保存

g:notmuch_to                                         *g:notmuch_to*
	Type: |List|
	Default: `[]`

	* 検索条件毎の送信先で、条件 1 つに付き
			`[search-term, '送信先']`
		のペアで指定
	* メーリング・リストの投稿用などの設定
	* |search-term| が `'*'` 場合はデフォルト送信先
	* |{F-WIN}| では「|g:notmuch_folders| の |search-term| と意味的に同じか?」ではなく、
		「単純に文字列として部分一致するか?」で判定
	* 他のバッファでは「選択/表示メールが |search-term| でヒットするか?」で判定

	Example >
		let g:notmuch_to = [
			\ ['folder:.vim'       , 'vim@user.com'],
			\ ['to:vim-jp@user.com', 'vim-jp@user.com'],
		\ ]

g:notmuch_use_commandline                            *g:notmuch_use_commandline*
	Type: |Number|
	Default: `0`

	* GUI でファイル選択時にダイアログを使用可能な環境でもコマンドラインモード
	  (|CmdLine|) を使用するか

g:notmuch_view_attachment                            *g:notmuch_view_attachment*
	Type: |String|
	Default: 環境依存

	* open (|notmuch-python-vim-open|) で添付ファイルを開く時に用いるプログラム
	* デフォルトは OS 依存
				 OS				program~
			Unix				`'xdg-open'`
			Windows			`'start'`
			macOS				`'open'`
			他					`''`

g:notmuch_visible_line                                 *g:notmuch_visible_line*
	Type: |String| or |Number|
	Default: `''`

	* |{T-WIN}| の列区切り線の代わりの | を他の |highlight-groups| に変更する
	* 実際にはタブ文字なので SpecialKey |hl-SpecialKey| を変更する
	* Default の様に空文字なら変更しない
	* `1`, `2` は特別で |'colorcolumn'| を使う
		- `1` の時は ColorColumn (|hl-ColorColumn|) をそのまま使う
		- `2` の時は ColorColumn を Normal (|hl-Normal|) の反転色にする


==============================================================================
                                                    *notmuch-python-vim-command*
コマンド~
                                                                       *Notmuch*
:Notmuch {subcommand} [{args}]
	サブコマンドがなければ、ヘルプ (ここ) を開く

------------------------------------------------------------------------------
                                                 *notmuch-python-vim-subcommand*
サブコマンド~

attach-delete                                 *notmuch-python-vim-attach-delete*
	* |{T-WIN}| ではカーソル位置または選択しているメールに含まれる添付ファイルを削除
		次のパートは削除しない
		- HTML パート
		- 暗号化パートやその内部のパート
		- 電子署名パート
	* |{S-WIN}| ではカーソル位置、もしくは選択している添付ファイルを削除
		- text/plain が有れば HTML パートの削除も可能

attach-save                                     *notmuch-python-vim-attach-save*
	* |{S-WIN}| でカーソル位置、もしくは選択している添付ファイルを保存
	* |{T-WIN}| では「どういった動作が好ましいのか?」の判断が付きかね未対応
		- 特にファイル名が被った時

close                                                 *notmuch-python-vim-close*
	* ウィンドウを閉じる
	* |:close| と違い最後のウィンドウでも他のバッファが無ければ Vim 自体を終了する

close-tab                                          *notmuch-python-vim-close-tab*
	close (|notmuch-python-vim-close|) に加えて
	* 同一タブページに |{F-WIN}| があれば、他の |{T-WIN}|/|{S-WIN}| や未編集の送信メー
		ル・バッファ(|notmuch-python-vim-sending-buffer|) も閉じる
	* そうでなければ、同一ウィンドウ内に有るペアとなる |{T-WIN}|/|{S-WIN}| を閉じる

mail-attach-forward                            *notmuch-python-vim-mail-attach*
	* 添付ファイルとして転送するメールの編集バッファを開く
	* ヘッダの意味などは |notmuch-python-vim-sendmail| 参照

	NOTE: deoplete.nvim 使用時の注意 (|notmuch-python-vim-deoplete|)

mail-delete                                     *notmuch-python-vim-mail-delete*
	* |{T-WIN}| ではカーソル位置または選択メールの元となるメール・ファイルを削除
	* |{S-WIN}| では表示しているメール元となるメール・ファイルを削除
	* 複数のメール・ファイルがある場合は、          *notmuch-python-vim-select-file*
		- 更新日時
		- HTMLパートの有無 (🌐) と添付ファイルについての情報
			+ 添付ファイルについての情報は暗号化されていれば🔑そうでなければ📎とその数
		- ファイル・サイズ
		- パス
		の表示する選択に移行し、選択したメールを残す
	* メール・ファイルが一つの時は、確認メッセージを表示
		- 削除を実行しても |{T-WIN}| のリストは更新されない
		- 更新するには reload (|notmuch-python-vim-reload|) が必要

mail-edit                                         *notmuch-python-vim-mail-edit*
	下書きメールやメール・ファイルを開く

mail-export                                     *notmuch-python-vim-mail-export*
	* メール・ファイルを別ファイルにエクスポート
	* メール・ファイルをコピーするだけなので、ファイルの中身はデコード前の状態
	* 複数のメール・ファイルがある時の動作は mail-delete と同じ
	                                              |notmuch-python-vim-select-file|

mail-forward                                   *notmuch-python-vim-mail-forward*
	* 転送メールの編集バッファを開く
	* ヘッダの意味などは |notmuch-python-vim-sendmail| 参照

	NOTE: deoplete.nvim 使用時の注意 (|notmuch-python-vim-deoplete|)

mail-import [{path}]                            *notmuch-python-vim-mail-import*
	* メール・ファイルをインポートする
	* {path} が無ければファイル/ディレクトリ選択になる
		- この指定でも空入力や <Esc> だとキャンセル
	* ディレクトリが選ばれた時は、サブフォルダも含めて、そこに含まれるメール・
		ファイルをインポート
	* ファイル/ディレクトリの両選択に対応するため、ダイアログを使用可能な環境で
	  も必ずコマンドラインモード (|CmdLine|) 使用
	* Message-ID ヘッダがなければ、メッセージを表示しインポートしない
	* 実行しても |{T-WIN}| のリストは更新されない
		- 更新するには reload (|notmuch-python-vim-reload|) が必要

mail-info                                         *notmuch-python-vim-mail-info*
	|{F-WIN}|	|{T-WIN}| を開く時に用いる |search-term| を表示
	|{T-WIN}|	|search-term| と次の |{S-WIN}| で表示する項目を表示
	|{S-WIN}|	メールの次の情報を表示
							* Message-ID
							* メールに付けられたタグ
							* メール・ファイルのパス
							* メール・ファイルの更新日時
							* メール・ファイルのファイル・サイズ
							* 復号化/電子署名検証処理済ならばその結果

	* ポップアップ対応環境 (|+popupwin|) なら、ポップアップで表示
		- ポップアップの枠のドラッグで移動可能
		- 次の操作で閉じる
			+ C/c/X/x/Q/q/P/p/<Esc> タイプ
			+	カーソル移動
			+	ポップアップ部のクリック
	* ポップアップ未対応環境は、コマンドラインモード (|CmdLine|) で表示

mail-move [{mailbox}]                             *notmuch-python-vim-mail-move*
	* メール・ファイルを別のメール・フォルダ {mailbox} に移動
	* {mailbox} が無ければコマンドラインモード (|CmdLine|) の指定になる
		- この指定でも空だとキャンセルになる
	* {mailbox} を複数指定しても最初以外は無視
	* |{T-WIN}| では、カーソル位置、もしくは選択メールの移動
	* 実行しても |{T-WIN}| のリストは更新されない
		- 更新するには reload (|notmuch-python-vim-reload|) が必要

mail-new                                           *notmuch-python-vim-mail-new*
	* 新規メールの編集バッファを開く
	* start (|notmuch-python-vim-start|) 未使用でも呼び出し可能
	* ヘッダの意味などは |notmuch-python-vim-sendmail| 参照

	NOTE: deoplete.nvim 使用時の注意 (|notmuch-python-vim-deoplete|)

mail-reindex                                   *notmuch-python-vim-mail-reindex*
	メールを再インデックス

mail-reply                                       *notmuch-python-vim-mail-reply*
	* 返信メールの編集バッファを開く
	* ヘッダの意味などは |notmuch-python-vim-sendmail| 参照

	NOTE: deoplete.nvim 使用時の注意 (|notmuch-python-vim-deoplete|)

mail-resent-forward                             *notmuch-python-vim-mail-resent*
	* そのまま転送するメールの編集バッファを開く
	* Resent-From, Resent-Sender, Resent-To, Resent-Cc, Resent-Bcc 以外のヘッダ
	  及び本文は送信時には無視される
	* Resent-From ヘッダが無いとそのまま転送としては扱わなくなる
	* 送信先が指定されて本文部分にカーソル移動すると送信、保存の選択
	* 送信済みメールは、送信したデータそのものではなく、必ずメールを作成のバッ
	  ファの内容をそのまま保存する
		- 送信したデータは、当然元のメールと同じ Message-ID になり Notmuch で区別
			できないため
		- 管理元ととなる適当な From, To, Date, Date, Message-ID を付ける
			+ Subject ヘッダがあればそのまま保存する

	NOTE: deoplete.nvim 使用時の注意 (|notmuch-python-vim-deoplete|)

mail-save [{path}]                                *notmuch-python-vim-mail-save*
	* |{S-WIN}| で表示される内容を別ファイルに保存
	* バッファの内容をそのまま保存するので、元のメール・ファイルにどんなヘッダが
		付いていたのかに関係なく、|{S-WIN}| で表示されている内容のみを保存
	* {path} が無ければファイル選択になる
		- この指定でも空入力や <Esc> だとキャンセル
	* |{T-WIN}| で複数メールを選択している場合
		- ファイル名は name-1.txt, name-2.txt, ... の要領で連番付きになる
		- 既存ファイルが有っても、そのまま上書き保存する

mail-send                                         *notmuch-python-vim-mail-send*
	* メールを |g:notmuch_send_param| にしたがって送信
	* |g:notmuch_send_param| で指定しているプログラムの設定が予め必要
	* 実行しても |{T-WIN}| のリストは更新されない
		- 更新するには reload (|notmuch-python-vim-reload|) が必要
	* バッファの種類によって送信対象になるメールが変わる
		- 送信メール・バッファ (|notmuch-python-vim-sending-buffer|) はそのバッファの内容
		- |{F-WIN}| では
			(folder:draft or folder:.draft or tag:draft) not tag:sent not tag:Trash not tag:Spam
			条件に一致するメール
		- |{T-WIN}| ではスレッド中の
			(folder:draft or folder:.draft or tag:draft) not tag:sent not tag:Trash not tag:Spam
			に一致するメール
		- |{S-WIN}| では表示しているメールが
			(folder:draft or folder:.draft or tag:draft) not tag:sent not tag:Trash not tag:Spam
			に一致するならそのメール
		- |{F-WIN}|, |{T-WIN}|, |{S-WIN}| で実行した時は、メール・ファイルを他のバッファ
			で開いていたり未保存メールは送信対象にならない
		- 上記の「tag:sent」は初期設定で、実際には |g:notmuch_sent_tag| に依存

mark                                                   *notmuch-python-vim-mark*
	* Vim の |mark| (|:mark|, m{a-zA-Z}) とは関係がない
	* |{T-WIN}| にてカーソル位置、もしくは選択メールを次のコマンドの操作対象にする
		マークをトグル
		- mark-command (|notmuch-python-vim-mark-command|)
		- thread-connect (|notmuch-python-vim-thread-connect|)
	* 複数選択時、マーク * の ON/OFF の基準はカーソル位置に関係なく選択開始行の
		ON/OFF の状態に従い、ここのメールのマークの ON/OFF 状態は無視される
	* 今の |{T-WIN}| の |search-term| とは別の search-term で |{T-WIN}| を開いても全て
		クリアされる

mark-command                                   *notmuch-python-vim-mark-command*
	* mark (|notmuch-python-vim-mark|) されたメールに対して纏めてサブコマンドを実行
	* 実行後マークはクリアされる
	* 複数のサブコマンドを実行する時の区切り文字は |\r| (<C-V><Enter>:|c_CTRL-v|)
		もしくは <NL> (<C-V><C-J>:|c_CTRL-v|)


open
	各種バッファや添付ファイルを開く (|notmuch-python-vim-open|)

reload                                               *notmuch-python-vim-reload*
	* |{T-WIN}| の情報を更新
	* 一度 |{T-WIN}| を開くと同じ |search-term| では、各種操作で情報が変わっても
		|{T-WIN}| の内容が更新されない
		このコマンドを実行することで更新される
	* 未読/既読等の操作で直ちに |{T-WIN}| バッファのリストから消えてしまうと、
		取り消しづらいのでこのような仕様にしている

run [{args}]                                            *notmuch-python-vim-run*
	* シェル・プログラムを実行する
	* | をパイプとして使用できない
	* {args} に <path:>, <id:> が有ればそれぞれ次に置き換わる
		- <path:>	メール・ファイルのフル・パス
		- <id:>		メールの Message-ID
			+ このためプログラムに <path:>, <id:> の文字列それ自体は渡せない
				* リダイレクトを使いたければ、>, < 前後にスペースを入れれば良い
	* {args} に <path:>, <id:> 両方無ければ、省略扱いとして {args} の最後
	  にメール・ファイルのフル・パス追加して処理

search [|search-term|]                                 *notmuch-python-vim-search*
	* Notmuch を用いて検索し、ヒットしたメール一覧を新たな |{T-WIN}| に表示する
	* |search-term| を指定していないと、コマンドラインモード (|CmdLine|) の指定になる
		- この指定でも空だとキャンセルになる
	* 実行時のコマンドラインモード (|CmdLine|) のデフォルト |search-term| は
			|{F-WIN}|		枠のカーソル位置に対応する |g:notmuch_folders| の |search-term|
			|{T-WIN}|/|{S-WIN}| メールに対応した |search-term|
	* 検索にヒットするメールがなければ、メッセージを表示のみおこない、|{T-WIN}| を
	  開かない

search-address                                *notmuch-python-vim-search-address*
	* 次のアドレスが From, To, Cc, Bcc の何れかに含まれているメールを |{T-Win}| 枠
		に一覧表示する
		- `sent` もしくは |g:notmuch_sent_tag| で指定したタグがついているメールなら
			From と Reply-To ヘッダに書かれたメール・アドレス
		- そうでなければ To、To が空なら Cc、Cc も空なら Bcc ヘッダに書かれたメール・
			アドレス

search-duplication                        *notmuch-python-vim-search-duplication*
	* 同一 Message-ID のファイルが複数あるメールを新たな |{T-Win}| 枠にリスト・アップ
	* 常に全メールが対象
	* |search-term| によって検索するわけではない
		- データ管理上の値が必要なので |search-term| は * 扱いとしている

search-refine                                 *notmuch-python-vim-search-refine*
	* |{T-WIN}| 中のメールから |search-term| で絞り込んで検索
	* vim 自身の |/| に近いが Notmuch による検索にマッチするメールを探す

search-down-refine                       *notmuch-python-vim-search-down-refine*
	* search-refine (|notmuch-python-vim-search-refine|) で指定した検索の下候補

search-up-refine                           *notmuch-python-vim-search-up-refine*
	* search-refine (|notmuch-python-vim-search-refine|) で指定した検索の上候補


search-thread                                 *notmuch-python-vim-search-thread*
	* メールを含むスレッドを新たな |{T-Win}| 枠に表示する

set-attach [{attachment}]                        *notmuch-python-vim-set-attach*
	* 送信メール・バッファ (|notmuch-python-vim-sending-buffer|) で添付ファイルとし
	  て {attachment} に変更/追加
	* {attachment} が無ければファイル選択になる
		- この指定でも <Esc> だとキャンセル
			+ コマンドラインモード (|CmdLine|) では空の入力でもキャンセル
	* カーソル位置が Attach: (|notmuch-python-vim-attach|) ヘッダなら変更

set-encrypt [{encrypt/signature}]               *notmuch-python-vim-set-encrypt*
	* 送信メール・バッファ (|notmuch-python-vim-sending-buffer|) の暗号化/電子署名
	  方法 を {encrypt/signature} で設定
	* {encrypt/signature} に指定できるのは、Encrypt, Signature ヘッダの直接編集
		時と同じで、大文字小文字の区別もなく次の通り
				指定できる文字列				意味~
					Encrypt							暗号化する
					Signature						電子署名をつける
					S/MIME							暗号化/電子署名に S/MIME を用いる
					SMIME
					S-MIME
					PGP/MIME						暗号化/電子署名に PGP/MIME を用いる
					PGPMIME
					PGP-MIME
					PGP									暗号化/電子署名に PGP を用いる
					Subject							PGP/MIME 暗号使用時に Subject も暗号化
					Public-Key					PGP/MIME 暗号使用時に From ヘッダのアドレスの PGP
															公開鍵を添付
		- 少なくとも Encrypt, Signature どちらか一方が必要
			+ 両方なければ全て無視される
		- 暗号化/電子署名の方法が未指定の場合 S/MIME を用いる
		- PGP/MIME でない PGP は注意が必要
			+ 通常の text/plain として暗号化・電子署名済みの内容が書き込むだけ
			+ 対応しているアプリが少ない
			+ 非対応アプリでは
				* 電子署名の検証は自動で行われない
				* 暗号化された内容がそのまま表示される
			+ 添付ファイルは暗号化・電子署名の対象にならない
	* {encrypt/signature} が無ければダイアログ・ボックスやコマンドラインモード
	  (|CmdLine|) の指定になる
		- E/e:   暗号化 (Encrypt) ON/OFF
		- D/d:   電子署名 (Digital signature) ON/OFF
		- M/m:   暗号化/電子署名の方法 (Method) をサイクリックに切り替え
		- S/s:   暗号化方法が PGP/MIME の時のみ出現し、Subject 暗号化 ON/OFF
		- P/p:   暗号化方法が PGP/MIME の時のみ出現し、PGP 公開鍵を添付
		- A/a:   バッファの Encrypt, Signature ヘッダへ反映
		- <Esc>: キャンセル
			o コマンドラインモード (|CmdLine|) では空の入力でもキャンセル

set-fcc [{mailbox}]                                 *notmuch-python-vim-set-fcc*
	* 送信メール・バッファ (|notmuch-python-vim-sending-buffer|) で {mailbox}
	  を Fcc: (|notmuch-python-vim-fcc|) に設定
	* {mailbox} が無ければコマンドラインモード (|CmdLine|) の指定になる
		- この指定でも空だとキャンセルになる

start                                                 *notmuch-python-vim-start*
	* |{F-WIN}| を開き、|g:notmuch_open_way| で |{T-WIN}| を分割して開く設定ならそ
		れを開く
	* |{T-WIN}| を開いた時 |{S-WIN}| を分割して開く設定ならそれも開く
	* この実行がなければ、mail-new (|notmuch-python-vim-mail-new|) 以外のサブ
		コマンドは呼び出せない
	* 既に実行済みの時はレイアウトをやり直す

tag-add [{tags}]                                    *notmuch-python-vim-tag-add*
	* メールにタグを追加
	* {tags} 無指定だとコマンドラインモード (|CmdLine|) 指定になる
		- この指定でも空だとキャンセルになる
	* 実行しても |{T-WIN}| のリストは更新されない
		- 更新するには reload (|notmuch-python-vim-reload|) が必要
	* 送信メール・バッファ (|notmuch-python-vim-sending-buffer|) は、Notmuch
	  database は直ちに反映されず、保存・送信時に反映される
		- 受信メールでは mail-edit (|notmuch-python-vim-mail-edit|) で開いても無視
			される

tag-delete [{tags}]                              *notmuch-python-vim-tag-delete*
	* メールのタグを削除
	* {tags} 無指定だとコマンドラインモード (|CmdLine|) 指定になる
		- この指定でも空だとキャンセルになる
	* 実行しても |{T-WIN}| のリストは更新されない
		- 更新するには reload (|notmuch-python-vim-reload|) が必要
	* 送信メール・バッファ (|notmuch-python-vim-sending-buffer|) は、Notmuch
	  database は直ちに反映されず、保存・送信時に反映される
		- 受信メールでは mail-edit (|notmuch-python-vim-mail-edit|) で開いても無視
			される

tag-set [{tags}]                                 *notmuch-python-vim-tag-set*
	* メールのタグを追加/削除/トグル
		- タグ名の前に + を付けると追加
		- タグ名の前に - を付けると削除
		- タグ名の前に何も付け無いとトグル
		- 例:
			+add -delete toggle
		- 追加/削除/トグルが矛盾すると、追加 > 削除 > トグルで優先される
	* {tags} 無指定だとコマンドラインモード (|CmdLine|) 指定になる
		- この指定でも空だとキャンセルになる
	* 実行しても |{T-WIN}| のリストは更新されない
		- 更新するには reload (|notmuch-python-vim-reload|) が必要
	* 送信メール・バッファ (|notmuch-python-vim-sending-buffer|) は、Notmuch
	  database は直ちに反映されず、保存・送信時に反映される
		- 受信メールでは mail-edit (|notmuch-python-vim-mail-edit|) で開いても無視
			される

tag-toggle [{tags}]                              *notmuch-python-vim-tag-toggle*
	* メールのタグをトグル
	* {tags} 無指定だとコマンドラインモード (|CmdLine|) 指定になる
		- この指定でも空だとキャンセルになる
	* 実行しても |{T-WIN}| のリストは更新されない
		- 更新するには reload (|notmuch-python-vim-reload|) が必要
	* 送信メール・バッファ (|notmuch-python-vim-sending-buffer|) は、Notmuch
	  database は直ちに反映されず、保存・送信時に反映される
		- 受信メールでは mail-edit (|notmuch-python-vim-mail-edit|) で開いても無視
			される

thread-connect                               *notmuch-python-vim-thread-connect*
	* mark (|notmuch-python-vim-mark|) されたメールをカーソル位置のメールにスレッ
		ドを繋げる
		- In-Reply-To, Reference ヘッダを編集している
	* mail-reindex (|notmuch-python-vim-mail-reindex|) と reload
		(|notmuch-python-vim-reload|) が行われる

thread-cut                                       *notmuch-python-vim-thread-cut*
	* メールのスレッド切断
		- In-Reply-To, Reference ヘッダを編集している
	* mail-reindex (|notmuch-python-vim-mail-reindex|) と reload
		(|notmuch-python-vim-reload|) が行われる

thread-next                                     *notmuch-python-vim-thread-next*
	* |{T-WIN}| で次のメールを選択しスレッドを開く
	* |j||zO| に違い折り畳みがなくてもエラーとせず、単に何もしない

thread-sort [{list}/{tree} {sorting-way}]       *notmuch-python-vim-thread-sort*
	* |{T-WIN}| で
		{list}/{tree}: 一覧/ツリー表示の指定
									 {sorting-way} が無ければ、ソート方法は変更せず一覧/ツリー表
									 示の切り替えのみ行う
									 重複メールを一覧表示する search-duplication
									 (|notmuch-python-vim-search-duplication|) では {tree} は無視
		{sorting-way}: ソート方法の変更
									 {list}/{tree} が無ければ {tree} 扱い
	* {list}/{tree}, {sorting-way} を指定していないと、コマンドラインモード
	  (|CmdLine|) の指定になる
		- この指定でも空だとキャンセルになる
	* mark (|notmuch-python-vim-mark|) によるマークは削除される
		{list}/{tree}		  意味~
		list						一覧表示
		tree						ツリー表示

		{sorting-way}			      意味~
		date							日付順
											{tree} では同一スレッド中の最新メールの日時が基準
		Date							日時逆順
		from							メール送信元順
											{tree} では同一スレッドに含まれるメール送信元
		From							メール送信元逆順
		subject						Subject 順
											Subject そのものではなく |g:notmuch_delete_top_subject| で整形
											済みの |{T-WIN}| に表示されている件名
											{tree} ではスレッド・トップが基準
		Subject						Subject 逆順

thread-toggle                                 *notmuch-python-vim-thread-toggle*
	* メールのスレッドを開閉する
	* 閉じた時はスレッドの先頭選択
	* 開いた時はできるだけ直前のメールを選択
		- 適当なメールがない時は、同一スレッド内の最後のメールを選択

view-previous                                 *notmuch-python-vim-view-previous*
	スクリーンに |{S-WIN}| が有れば |{F-WIN}|/|{T-WIN}| がアクティブでも |{S-WIN}| を
	スクロール・アップ

view-unread-mail                           *notmuch-python-vim-view-unread-mail*
	* 次の未読メールに移動
	* 現在表示しているメールの未読/既読は変更しない (unread タグの削除しない)

view-unread-page                           *notmuch-python-vim-view-unread-page*
	* スクリーンに |{S-WIN}| が有れば |{F-WIN}|/|{T-WIN}| がアクティブでも |{S-WIN}| を
		スクロール・ダウン
	* すでにメールの最後まで表示していれば、既読 (unread タグを削除) にして次の
		未読 (unread タグ付き) メールを開く

==============================================================================
                                                   *notmuch-python-vim-how-make*
作成動機~

同種のプラグインとしては、notmuch-vim (https://github.com/felipec/notmuch-vim)
が有るが、
	* 未読メールを読み進めにくい
	* 添付ファイルの削除ができない
	* 添付ファイルを削除済みだと part ???: は出てきても、ファイル名までは解らない
	* 変換できないヘッダがあるとメールが見られない
	* text/html のみで text/plain が無いと、それを開くのが面倒
	* text/html を開けないケースが有る (Office365 Outlook の暗号化メール)
	* スレッド構造がわからない
	* 全角の文字幅への考慮が無い←notmuch-thread で各ヘッダ・カラムがずれる
	* メール移動がない
	* 署名の使い分けができない
	* メール数が多い |search-term| だと、新しい順でスクロールさせないと古いメール
		が一覧に出てこず、その為古いメールのアクセスは時間がかかる
	* “Passing an unparsed header field to Mail::Field.new is deprecated and
		will be removed in Mail 2.8.0. Use Mail::Field.parse instead.”と警告が出る
		(メンテナンスされていない?)

他のクライアントとしては、Mutt の virtual-folder だと
	* メールの移動が反映されない
	* 未読等の情報が他の virtual-folder へ直ちに反映されない
	* 返信メールをその返信元と同じフォルダに自動で入れる処理が面倒
	* 送信メール編集中に他のメッセージを表示できない/煩雑


==============================================================================
更新履歴~
* |notmuch-python-vim-history| に移動

vim:tw=78:ts=2:ft=help:norl:noet:fen:

*notmuch-python-vim.txt* メールの読み書きを手助けする

Version: 0.65
Author:  Iranoan <iranoan+vim@gmail.com>
License: GPL Ver.3.


==============================================================================
                                                   *notmuch-python-vim-contents*
目次 ~

	* 概要                                          |notmuch-python-introduction|
		- 欠点                                        |notmuch-python-vim-demerit|
	* 要件                                          |notmuch-python-vim-require|
	* インストール                                  |notmuch-python-vim-install|
	* 使用方法                                      |notmuch-python-vim-use|
		- デフォルト・レイアウト                      |notmuch-python-vim-layout|
		- デフォルトの主な使用法                      |notmuch-python-vim-default-use|
		- 送信メール                                  |notmuch-python-vim-sendmail|
		- デフォルト・キーマップ                      |notmuch-python-vim-keymap|
		- 編集系で使っていない一文字キー              |notmuch-python-not-use-key|
		- キーマップのないサブコマンド                |notmuch-python-nokey-command|
	* 設定/オプション                               |notmuch-python-vim-custom|
		- deoplete.nvim 使用時の注意                  |notmuch-python-vim-deoplete|
		- オプション                                  |notmuch-python-vim-option|
	* コマンド                                      |notmuch-python-vim-command|
		- サブコマンド                                |notmuch-python-vim-subcommand|
	* 作成動機                                      |notmuch-python-vim-how-make|
	* TODO                                          |notmuch-python-vim-todo|
	* 更新履歴                                      |notmuch-python-vim-history|


==============================================================================
                                                   *notmuch-python-introduction*
概要 ~

notmuch-python-vim は Notmuch (https://notmuchmail.org/) と連携して、メールの
読み書きを手助けする

Notmuch には元々送受信機能がないので、送信には sendmail 等、受信には fetchmail
等のプログラムが別途必要

同種のプラグインとしては、notmuch-vim (https://github.com/felipec/notmuch-vim)
が有るが、自分の使いたい機能がなかったので作成 (|notmuch-python-vim-how-make|)

------------------------------------------------------------------------------
                                                    *notmuch-python-vim-demerit*
欠点 ~

メール数が多い検索条件だとスレッド一覧の表示に時間がかかる
	* Ubuntu 21.10
	* Linux kernel 5.13.0
	* VIM - Vi IMproved 8.2 (2019 Dec 12, compiled Nov 08 2021 14:17:01)
	* CPU: Intel(R) Core(TM) i7-6500U CPU @ 2.50 GHz
	* Memory: 8 GB
の環境で、約 27000 通にヒットする検索条件のスレッド一覧の表示に 25 秒ほどかかる
かかる
                                                                   *search-term*
NOTE: 以下、Notmuch を用いる検索条件は |search-term| と記載する

個人的には今の所、普段は 3 ヶ月以内のメールのみ一覧するように |search-term| を指
定している

タグの操作で複数指定をできるようにしたため、通常 Vim では | (バー) で区切ると
複数個のコマンド指定ができるが、それができない

==============================================================================
                                                    *notmuch-python-vim-require*
要件 ~
 >
Vim ~
>
	$ vim --version | grep +python3
<
他には +folding 等も必要だが、調べきれていない

Notmuch ~

Notmuch をセットアップし、 >
	$ notmuch new
でデータベースを作成しておく必要が有る

Notmuch が動作条件なので、対応しているメール・ボックスの種類は Maildir, MH の
いずれかになる

Python Ver.3.5 以上~

加えて Python Ver.3 の notmuch, html2text パッケージが必要

Ubuntu 等の Debian 系なら >
	$ sudo apt install -y python3-notmuch python3-html2text
<
他では例えば >
	$ python3 -m pip install notmuch html2text


==============================================================================
                                                    *notmuch-python-vim-install*
インストール ~

使用しているパッケージ・マネージャに従えば良い

Vundle (https://github.com/gmarik/vundle) ~
>
	Plug 'iranoan/notmuch-py-vim'

Vm-Plug (https://github.com/junegunn/vim-plug) ~
>
	Plug 'iranoan/notmuch-py-vim'

NeoBundle (https://github.com/Shougo/neobundle.vim) ~
>
	NeoBundle 'iranoan/notmuch-py-vim'

dein.nvim (https://github.com/Shougo/dein.vim) ~
>
	call dein#add('iranoan/notmuch-py-vim')

Vim packadd ~
>
	$ git clone https://github.com/iranoan/notmuch-py-vim ~/.vim/pack/iranoan/start/notmuch-py-vim
<	遅延読み込みをさせるなら >
	$ git clone https://github.com/iranoan/notmuch-py-vim ~/.vim/pack/iranoan/opt/notmuch-py-vim
<	~/.vim/vimrc などの設定ファイルに次のような記載を加える >
		augroup loadNotmuchPy
			autocmd!
			autocmd CmdUndefined Notmuch packadd notmuch-py-vim
		augroup END


==============================================================================
                                                        *notmuch-python-vim-use*
使用方法 ~

次のように起動する >
	$ vim +'Notmuch start'
<Vim 起動後なら >
	:Notmuch start

------------------------------------------------------------------------------
                                                     *notmuch-python-vim-layout*
デフォルト・レイアウト ~

デフォルトでは >
	:Notmuch start
<で次のレイアウトで起動する
                                                        *{F-WIN}* *{T-WIN}* *{S-WIN}*
	+-----------+------------------------------------------------+
	|           |                                                |
	|           |                |{T-WIN}|                         |
	|           |                                                |
	|           +------------------------------------------------+
	|           |                                                |
	|  |{F-WIN}|  |                                                |
	|           |                                                |
	|           |                |{S-WIN}|                         |
	|           |                                                |
	|           |                                                |
	|           |                                                |
	|           |                                                |
	+-----------+------------------------------------------------+

------------------------------------------------------------------------------
                                                *notmuch-python-vim-default-use*
デフォルト環境の主な使用法 ~

上の |{F-WIN}|, |{T-WIN}|, |{S-WIN}| の意味はそれぞれ次のとおり

|{F-WIN}|
	* 擬似的なメール・フォルダのフォルダー・ツリー
	* |g:notmuch_folders| の見出し部分を表示し |search-term| 部分が隠れた状態
		で開かれる
	* o で |{T-WIN}| にメール一覧を表示                 |notmuch-python-vim-open|
	* |:bwipeout| すると他の |{T-WIN}|/|{S-WIN}| や未編集の送信バッファも閉じられる
|{T-WIN}|
	* スレッド・ツリー
	* デフォルトでは全体の 1/4 程度の高さ
	* |{S-WIN}| のウィンドウが有れば、カーソル位置のメールを |{S-WIN}| に表示する
	* o でスレッド開閉                         |notmuch-python-vim-thread-toggle|
	* ステータス・バーにタグなどの情報を表示
	* |zn| を無効にしている
|{S-WIN}|
	* まず先頭に |g:notmuch_show_headers|、次に |g:notmuch_show_hide_headers|
		に従い From, To, Subject, Date 等のヘッダを表示する
	* それに続いて、次の仮想ヘッダを表示                *notmuch_virtual_haeder*
			----------------+---------------------------------------------------~
			 追加するヘッダ	|                 意味 ~
			----------------+---------------------------------------------------~
			Attach:					| 添付ファイル名 (添付ファイル数だけ)
			HTML:						| HTML メール (ファイル名の代わりに index.html)
			PGP-Decrypted:	| 暗号化メールを復号化した時の情報 (以下が主な例)
											| S/MIME
											| OpenPGP/MIME
											| inline
			PGP-Encrypted:	| 暗号化メールの復号化していない時の上記情報
			Encrypt:				| 暗号化メールを復号していない時、そのファイル名
			PGP-Public-Key: | 添付された公開鍵
			Good-Signature:	| 正しい署名と検証された時、そのファイル名
			Bad-Signature:	| 不正な署名と判定された時、そのファイル名
			Signature:			| 対応する鍵がない時、その電子署名ファイル
			----------------+---------------------------------------------------~
			Example: >
				HTML: index.html
				Attach: attachment.zip
<		- どちらも削除されていれば、HTML:→Del-HTML: 等と Del- が先頭に付く
	* これらのヘッダの後に本文が続き、text/plain と text/html パートの両方が含
		まれている時は、text/plain の後の >
			HTML part
<		に続いて text/html パートが折り畳まれた状態で表示される
	* text/html しか無いメールの場合、折り畳まれずに表示される

------------------------------------------------------------------------------
                                                   *notmuch-python-vim-sendmail*
送信メール ~

	:Notmuch start をしていなくとも、送信メールは >
		$ vim +'Notmuch mail-new'
<	ではじめられる >
		$ vim +'Notmuch mail-new vim@user.com'
		$ vim +'Notmuch mail-new mailto:vim-jp@user.com'
<	とメールアドレス付きで起動すれば、To ヘッダに指定される

	Notmuch start 済みなら >
		:Notmuch mail-new
<	この時 |{F-WIN}| ならカーソル位置、他なら開いているメールと |g:notmuch_to| の
	組み合わせで、To ヘッダが入力済みになる

	送信メールに                                         *notmuch-python-vim-head*  >
		From:
		To:
		Cc:
		Bcc:
		Subject:
		Reply-To:
		Attach:
<	のような内容が入力済みなので送信先や件名を書き込む

	バッファを開いたお気にどのヘッダ名が入力済みかは、|g:notmuch_draft_header|
	で設定できる

	送信時はどのヘッダも「:」以降の内容がなければそのヘッダ自身がないものとし
	て処理する

	実際に送信されない仮想ヘッダとして次のヘッダがある
			----------------+---------------------------------------------------~
			 追加するヘッダ	|                 意味 ~
			----------------+---------------------------------------------------~
			Attach:					| 添付ファイルのパスを指定
											| 複数添付する場合は、その数だけ指定する
											|                            *notmuch-pytho-vim-attach*
			Fcc:						| 送信メールの保存先メール・フォルダの指定
											|                               *notmuch-pytho-vim-fcc*
			Encrypt:				| 暗号化の方法指定           *notmuch-pytho-vim-encrypt*
			Signature:			| 電子署名の方法指定
			----------------+---------------------------------------------------~
		* Fcc の指定がなければ |g:notmuch_save_sent_mailbox| に従う
		* Encrypt, Signature で使えるのは次の通り
			------------------------+-------------------------------------------~
			 暗号化・電子署名の方法	| Encrypt, Signature で意味を持つ指定方法 ~
			 (複数指定時の優先順)		| (大文字・小文字の区別はなし) ~
			------------------------+-------------------------------------------~
			S/MIME									| S/MIME
															| SMIME
															| S-MIME
			PGP/MIME								| PGP/MIME
															| PGPMIME
															| PGP-MIME
			PGP											| PGP
															| (通常の text/plain として暗号化・電子署名済
															|  みの内容が書き込まれ、添付ファイルは暗号化・
															|  電子署名の対象にならない)
			------------------------+-------------------------------------------~
			- Encrypt, Signature 両方の指定があれば暗号化+電子署名両方を行う
			- Encrypt, Signature の指定が異なっていれば、Encrypt の指定方法を用いる

	本文部分にカーソルが移動すると
		* |g:notmuch_from| などによって From ヘッダ
		* |g:notmuch_signature| によって連絡先などの署名
	が入力される

	実際の送信は mail-send (|notmuch-python-vim-mail-send|) を用いる

	下書きの保存は普通に >
	:w
<	(|:write|)などを使えばよく、再編集は mail-edit (|notmuch-python-vim-mail-edit|)

------------------------------------------------------------------------------
                                                     *notmuch-python-vim-keymap*
デフォルト・キーマップ ({F-WIN}, {T-WIN}, {S-WIN})~

<F1>			ヘルプでこの項目を開く
<Space>		未読ページ                      |notmuch-python-vim-view-unread-mail|
<S-Space>	メールのページアップ            |notmuch-python-vim-view-previous|
o					カーソル位置に応じて開く (Open) |notmuch-python-vim-open|
					|{F-WIN}|	|{T-WIN}| を開く
					|{T-WIN}|	* |notmuch-python-vim-open| ではなくスレッド・ツリーの開
											閉状態をトグル                              |zA|
										* なお |{S-WIN}| のウィンドウが有ればカーソル移動だけで
											カーソルのメール内容を |{S-WIN}| で表示される
					|{S-WIN}|	添付ファイルを開く
O					|{T-WIN}| で |{S-WIN}| を開く       |notmuch-python-vim-open|
c					新規メール (Create new mail)    |notmuch-python-vim-mail-new|
r					返信メール (Reply)              |notmuch-python-vim-mail-reply|
R					転送メール                      |notmuch-python-vim-mail-forward|
u					未読/既読トグル (toggle Unread) |notmuch-python-vim-tag-toggle|
					|{T-WIN}| では加えて次のメールを選択 (|j|)
J					次の未読メール (j の拡張)       |notmuch-python-vim-view-unread-page|
d					メールの Trash タグをトグル (追加/削除) と既読化
					                                |notmuch-python-vim-tag-toggle|
					|{T-WIN}| では加えて次のメールを選択 (|j|)
a					タグの追加 (Add tag)            |notmuch-python-vim-tag-add|
A					タグの削除 (add tag の逆)       |notmuch-python-vim-tag-delete|
C					スレッドを繋げる (Connect thread) |notmuch-python-vim-thread-connect|
D					添付ファイルの削除              |notmuch-python-vim-attach-delete|
i					メール・インポート (Import)     |notmuch-python-vim-mail-import|
I					メール・エクスポート (import の逆) |notmuch-python-vim-mail-export|
p					|search-term| やメールの各種情報や OpenPGP, S/MIME 処理の詳細情報の表示
					(Popup information)               |notmuch-python-vim-mail-info|
					ポップアップやコマンド・ラインで表示
					ポップアップ表示は、カーソル移動や C/c/X/x/Q/q/P/p/<Esc> で閉じる
s					|{F-WIN}|/|{T-WIN}|  検索一覧 (Search)
					                                |notmuch-python-vim-search|
					|{S-WIN}|  添付ファイルを保存 (Save attach)
					                                |notmuch-python-vim-attach-save|
S					メール保存 (Save mail)          |notmuch-python-vim-mail-save|
<Tab>			ウィンドウを |{F-WIN}|→|{T-WIN}|→|{S-WIN}| とサイクリックに切り替え
					                                |CTRL-W_w|
<S-Tab>		ウィンドウを |{F-WIN}|→|{S-WIN}|→|{T-WIN}| とサイクリックに切り替え
					                                |CTRL-W_W|
<leader>s	メール送信 (mail-send)          |notmuch-python-vim-mail-send|

-------------------------------------------------------------------------------
                                               *notmuch-python-vim-draft-keymap*
デフォルト・キーマップ (送信メール)~

mail-new (|notmuch-python-vim-mail-new|), mail-reply
(|notmuch-python-vim-mail-reply|), mail-forward (|notmuch-python-vim-mail-forward|)
で開いた送信メール・バッファで次をキーマップしている

<Leader>s	バッファをメール送信 (Send)     |notmuch-python-vim-mail-send|
<leader>f Fcc の設定                      |notmuch-python-vim-set-fcc|
<leader>c 添付ファイルの追加/変更         |notmuch-python-vim-set-attach|
<leader>e 暗号化/電子署名の設定           |notmuch-python-vim-set-encrypt|
<leader>a	タグの追加 (Add tag)            |notmuch-python-vim-tag-add|
<leader>A
<leader>d	タグの削除 (Delete tag)         |notmuch-python-vim-tag-delete|
<leader>t	タグの追加/削除をトグル (Toggle tag)
                                          |notmuch-python-vim-tag-toggle|
<leader>p	Message-ID 等メールの各種情報表示 (Popup information)
                                          |notmuch-python-vim-mail-info|
<leader>q バッファを閉じる (Quit)         |:bwipeout|!
<leader>h
<F1>			ヘルプでこの項目を開く (Help)

-------------------------------------------------------------------------------
                                                    *notmuch-python-not-use-key*
編集系で使っていない一文字キー ~
`~`
P
U
x
X
.

-------------------------------------------------------------------------------
                                                  *notmuch-python-nokey-command*
キーマップのないサブコマンド ~
start					|notmuch-python-vim-start|
close					|notmuch-python-vim-close|
mail-delete		|notmuch-python-vim-mail-delete|
mail-edit			|notmuch-python-vim-mail-edit|
mail-move			|notmuch-python-vim-mail-move|
mail-reindex	|notmuch-python-vim-mail-reindex|
mark					|notmuch-python-vim-mark|
mark-command	|notmuch-python-vim-mark-command|
reload				|notmuch-python-vim-reload|
run						|notmuch-python-vim-run|
search-thread	|notmuch-python-vim-search-thread|
thread-cut		|notmuch-python-vim-thread-cut|
thread-sort		|notmuch-python-vim-thread-sort|

==============================================================================
                                                     *notmuch-python-vim-custom*
設定/オプション ~

------------------------------------------------------------------------------
                                                   *notmuch-python-vim-deoplete*
deoplete.nvim 使用時の注意 ~


送信メールはデフォルトでは deoplete による snippet を用いた補完の対象外補完の
対象にする設定が必要

	Example: >
		call deoplete#custom#option({
			\ 'nofile_complete_filetypes' : ['denite-filter', 'notmuch-draft'],
			\ })

------------------------------------------------------------------------------
                                                     *notmuch-python-vim-option*
オプション ~

g:notmuch_attachment_tmpdir                          *g:notmuch_attachment_tmpdir*
	Type: |String|
	Default: `''`

	* 添付ファイルを開いたとき一時的に保存されるフォルダ
	* `''` のときはこのプラグインの保存先の attach フォルダに保存

g:notmuch_command                                    *g:notmuch_command*
	Type: |Dictionary|

	* 使用できるサブコマンド (|notmuch-python-vim-subcommand|)
	* 通常変更する必要はないが、自作コマンドを追加した時に登録が必要

	Example: >
		let g:notmuch_command['subcommand']    = ['Funcref', mark_cmd]
<
		subcommand:	サブコマンド名
		Funcref:		実際に呼び出される関数名 (ラムダ式は未対応)
		mark_cmd:		mark-command (|notmuch-python-vim-mark-command|) で呼び出
								し可能 (|v:true|) か? 不可能 (|v:false|) か?

g:notmuch_date_format                                *g:notmuch_date_format*
	Type: |String|
	Default: `'%Y-%m-%d %H:%M'`

	* 次で表示する日時情報の書式
		- |{T-WIN}| の Date ヘッダ
		- |{S-WIN}| のステータス行に表示する Date ヘッダ
		- attach-delete (|notmuch-python-vim-attach-delete|), mail-export
			(|notmuch-python-vim-mail-export|), mail-info
			(|notmuch-python-vim-mail-info|) 使用時のメール・ファイルの更新日時
	* Python strftime() メソッドを用いている
			%a: ローケルの曜日短縮表記
			%A: ローケルの曜日
			%b: ローケルの月短縮表記
			%B: ローケルの月
			%m: 月2桁
			%y: 西暦2桁
			%Y: 西暦4桁
			%H: 24時間制の時刻
			%h: 12時間制の時刻
			%p: AM/PM と等価なロケール表記
			%M: 2桁表記の分
			%S: 2桁表記の秒

	NOTE:
	https://docs.python.org/3/library/datetime.html?highlight=strftime#strftime-strptime-behavior
	https://docs.python.org/ja/3/library/datetime.html?highlight=strftime#strftime-strptime-behavior

g:notmuch_delete_top_subject                        *g:notmuch_delete_top_subject*
	Type: |String|
	Default: `r'^\s*((R[Ee][: ]*\d*)?\[[A-Za-z -]+(:\d+)?\](\s*R[Ee][: ])?\s*' + r'|(R[Ee][: ]*\d*)?\w+\.\d+:\d+\|( R[Ee][: ]\d+)? ?' + r'|R[Ee][: ]+)*[　 ]*'`

	* |{T-WIN}| に表示する Subject ヘッダの内容の内、実際の表記で省略する部分
	* Vim では無く Python の正規表現で指定しなければならない

	Example: >
		let g:notmuch_delete_top_subject = '^\s*(\[[\w_-]+:\d+\](\s*R[Ee][: ])?\s*)+'

g:notmuch_display_item                              *g:notmuch_display_item*
	Type: |List|
	Default: `['Subject', 'From', 'Date']`

	* |{T-WIN}| で表示するヘッダの順序
	* 指定できるヘッダは Subject, From, Date のみ

g:notmuch_draft_header                                *g:notmuch_draft_header*
	Type: |List|
	Default: `['From', 'To', 'Cc', 'Bcc', 'Subject', 'Reply-To', 'Attach']`

	* 送信メールの編集バッファを開いた時、入力済みにしておくヘッダの順序
	* Attach ヘッダのみは、含まれていれば順序に関係なく、ヘッダの最後に入力

g:notmuch_folder_format                               *g:notmuch_folder_format*
	Type: |String|
	Default: `'{0:<??}{1:>??}/{2:>??}|{3:>??} [{4}]'`

	* |{F-WIN}| に表示する |g:notmuch_folders| の情報の表示方法
	* Python の format() メソッドの指定を用いる必要が有る
				            {} 内の最初の数値の意味~
				----------+----------------------------------~
				最初の数値|       意味~
				----------+----------------------------------~
				    0     | |g:notmuch_folders| の見出し部分
				    1     | 未読 (unread タグ付き) メール数
				    2     | 総メール数
				    3     | 重要 (flagged タグ付き) メール数
				    4     | |g:notmuch_folders| の |search-term|
				----------+----------------------------------~

				     {} 内の残りの部分~
				--------------+-------------~
				      値      |   意味~
				--------------+-------------~
				:<            | 左詰め
				:>            | 右詰め
				上記に続く数  | 文字の桁数
				--------------+-------------~
	* Default で示している `'{0:<??}{1:>??}/{2:>??}|{3:>??} [{4}]'` の ?? の部
		分は、|g:notmuch_folders| の見出し部分の設定や個々の環境のメール数を元に
		計算される
	* Default を前提に、未読メール有りのフォルダを太字表示にしているので、変
		更した場合は >
			syntax match UnreadFolder /^.\+ *\([1-9]\|[1-9]\+[0-9]\+\)\/ *[0-9]\+| *[0-9]\+ \[[^]]\+\]$/
<		の設定を書き換える必要性がある

	Example >
		let g:notmuch_folder_format = '{0:<14}{1:>3}/{2:>5}|{3:>3} [{4}]'`

g:notmuch_folders                                    *g:notmuch_folders*
	Type: |List|
	Default:`[
		\ [ 'new',       '(tag:inbox and tag:unread)' ],
		\ [ 'inbox',     'tag:inbox' ],
		\ [ 'unread',    'tag:unread' ],
		\ [ 'draft',     '((folder:draft or folder:.draft or tag:draft) not tag:sent not tag:Trash not tag:Spam)' ],
		\ [ 'attach',    'tag:attachment' ],
		\ [ '6 month',   'date:183days..now'],
		\ [ '',          '' ],
		\ [ 'All',       'path:**' ],
		\ [ 'Trash',     '(folder:.Trash or folder:Trash or tag:Trash)' ],
		\ [ 'New Search','' ],
		\ ]

	* 検索条件のリスト
	* リスト内の要素は >
			['見出し', search-term]
<		をペアとする |List| で指定する
	* |search-term| は、Notmuch の検索方法
	* デフォルト・レイアウト (|notmuch-python-vim-layout|) では、|{F-WIN}| バッファ
		に見出しだけを見せ、|search-term| が隠れるようにウィンドウを分割する
	NOTE: >
		$ man notmuch-searrch-terms
<	* 見出し、|search-term| の両方が `''` だと空行に変換されを、|search-term| だけ
		`''` だと、|{F-WIN}| の open (|notmuch-python-vim-open|) が search
		(|notmuch-python-vim-search|) 置き換わる

g:notmuch_from                                       *g:notmuch_from*
	Type: |List|
	Default: `[]`

	* 送信メールで本部分にカーソル移動した時、From ヘッダが空の時に書き込む内容
	* `[]` だと Notmuch の user.primary_email 設定 (~/.notmuch_config の次
		のような記載部分) が使われる >
			[user]
			name=user name
			primary_email=vim@user.com
<	* リスト内の指定の一つ一つは |Dictionary| で
		{'id': 'ニックネーム', 'address': 'From ヘッダへの入力内容', 'To', '検索条件'}

	Example >
		let g:notmuch_from = [
			\ {
			\     'id': 'Vim',
			\     'address' : 'Vim User <vim@user.com>',
			\     'To' : '',
			\ },
		\ ]
<
	* 'id', 'To' は、複数指定したときだけ意味が有る
	* To ヘッダが検索条件に一致すれば、それが使われる
	* 一致する条件がなければ、'To':'*' を指定した要素が使われる
		Example >
			let g:notmuch_from = [
				\ {
				\     'id': 'Vim',
				\     'address' : 'Vim User <vim@user.com>',
				\     'To' : '',
				\ },
				\ {
				\     'id': 'Vim-JP',
				\     'address' : 'Vim User <vim-jp@user.com>',
				\     'To' : '',
				\ },
			\ ]
<		のように、それもなければ、次のような選択になる >
			Select using From:.  When only [Enter], use default (vim@user.com).
			1. Vim: Vim User <vim@user.com>
			2. Vim-JP: Vim User <vim-jp@user.com>
<	* 'id' はこの選択時に区別しやすくする見出し

g:notmuch_from_length                                *g:notmuch_from_length*
	Type: |Number|
	Default: `21`

	* |{T-WIN}| に表示する From (sent タグがついていれば To) ヘッダの内容を表示する幅

g:notmuch_import_mailbox                             *g:notmuch_import_mailbox*
	Type: |String|
	Default: `''`

	* インポート (mail-import: |notmuch-python-vim-mail-import|) したメールを取
		り込むフォルダ
	* `''` の場合はメール・ボックスのルート

g:notmuch_make_dump                                  *g:notmuch_make_dump*
	Type: |Number|
	Default: `0`

	* 0 でなければ、終了時に |g:notmuch_save_dir| notmuch dump --gzip の処理結果
		notmuch.gz を作成する

g:notmuch_mailbox_type                               *g:notmuch_mailbox_type*
	Type: |String|
	Default: `'Maildir'`

	* メール・ボックスの種類
	* 指定できるのは Maildir と MH のみ

g:notmuch_open_way                                   *g:notmuch_open_way*
	Type: |Dictionary|
	Default: {
		\ 'folders': 'tabedit' ,
		\ 'thread' : 'rightbelow ??vnew' ,
		\ 'show'   : 'belowright ??new' ,
		\ 'search' : 'tabedit' ,
		\ 'edit'   : 'tabedit' ,
		\ 'view'   : 'belowright ??new',
		\ }

	* ウィンドウや subcommand (|notmuch-python-vim-start|) 使用時の開き方
			--------+--------------------------------------------------~
			  key		|               subcommand~
			--------+--------------------------------------------------~
			folders	| |{F-WIN}|
			thread	| |{T-WIN}|
			show		| |{F-WIN}|
			search	| search (|notmuch-python-vim-search|),
							| search-thread (|notmuch-python-vim-search-thread|)
			edit		| mail-edit (|notmuch-python-vim-mail-edit|)
			view		| search/search-thread とペアになる |{S-WIN}|
			open		| |{S-WIN}| で open (|notmuch-python-vim-open|) 使用時
							| に最後に試みるコマンド
							| - URL を開くなど好みのコマンドを指定可能
			--------+--------------------------------------------------~
		- open 以外で値に指定できるのは、'new', 'vnew', 'tabedit', 'enew' と
			'rightbelow', 'belowright', 'topleft', 'botright' と数の組み合わせのみ
	* Default の ?? は、デフォルト・レイアウト (|notmuch-python-vim-layout|) が
		次を満たすように計算される
			|{F-WIN}|	|g:notmuch_folders| の見出しだけ表示し |search-term| が隠れる
								よう他のバッファで分割
			|{T-WIN}|	全体の 1/4 程度の高さのウィンドウで分割

	Example >
		let g:notmuch_open_way = {
			\ 'folders': 'tabedit' ,
			\ 'thread' : 'rightbelow 133vnew' ,
			\ 'show'   : 'belowright 34new' ,
			\ 'search' : 'tabedit' ,
			\ 'edit'   : 'tabedit' ,
			\ 'view'   : 'belowright 34new',
		\ }

g:notmuch_save_dir                                   *g:notmuch_save_dir*
	Type: |String|
	Default: `''`

	* メール保存 (mail-save: |notmuch-python-vim-mail-save|)、エクスポート
		(mail-export: |notmuch-python-vim-mail-export|)、添付ファイルの保存
		(attach-save: |notmuch-python-vim-attach-save|) 時のデフォルト保存先
	* `''` の場合はカレント・フォルダ

g:notmuch_save_draft                                 *g:notmuch_save_draft*
	Type: |Number|
	Default: `0`

	* Fcc ヘッダの指定や |g:notmuch_save_sent_mailbox| に従った保存方法を指定
	* 0 なら、送信メールのデータそのもの
		- 文字コード変換、ヘッダと添付ファイルがエンコード済みデータになる
	* 1 だと編集バッファをほぼそのままプレイン・テキストとして保存
		- 文字コードは UTF-8
		- Content-Type: text/plain; charset="utf-8"
			Content-Transfer-Encoding: 8bit
			ヘッダの追加
		- Attach ヘッダは X-Attach ヘッダに名称変更

g:notmuch_save_sent_mailbox                          *g:notmuch_save_sent_mailbox*
	Type: |String|
	Default: なし

	* 送信済みメール (mail-import: |notmuch-python-vim-mail-import|) のデフォルト
		保存フォルダ
	* デフォルトではメール・フォルダのルート直下の sent フォルダ
	* `''` を指定すると、送信済みメールを保存しない

g:notmuch_send_encode                                *g:notmuch_send_encode*
	Type: |List|
	Default: `['us-ascii', 'iso-2022-jp', 'utf-8']`

	* 送信時のエンコード優先順位
	* エンコードを試みて失敗した場合に次の候補が用いられる
	* 最後の候補も失敗した時は Base64 エンコード

g:notmuch_send_param                                 *g:notmuch_send_param*
	Type: |List|
	Default: `['sendmail', '-t', '-oi']`

	* 送信時に使用するプログラムとそのパラメータ

g:notmuch_sent_tag                                   *g:notmuch_sent_tag*
	Type: |String|
	Default: `sent`

	* 送信メールに追加されるタグ

g:notmuch_show_headers                               *g:notmuch_show_headers*
	Type: |List|
	Default: `['From', 'Subject', 'Date', 'To', 'Cc', 'Bcc',]`

	* |{S-WIN}| に表示するヘッダとその順序
	* これに続いて次を表示
		- |g:notmuch_show_hide_headers| に従いヘッダを折り畳んで
		- HTMLパートがあれば HTML ヘッダ
		- 添付ファイルの数だけ Attach ヘッダ

g:notmuch_show_hide_headers                          *g:notmuch_show_hide_headers*
	Type: |List|
	Default: `'[Return-Path', 'Reply-To', 'Message-ID', 'In-Reply-To', 'References', 'Errors-To',]`

	* |{S-WIN}| に表示されたとき、折りたたみ表示されるヘッダとその順序
	* これに続いて次を表示
		- HTMLパートがあれば HTML ヘッダ
		- 添付ファイルの数だけ Attach ヘッダ

g:notmuch_signature                                  *g:notmuch_signature*
	Type: |Dictionary|
	Default: `{}`

	Example >
		let g:notmuch_signature = {
			\ '*'              : '~/.signature/default',
			\ 'vim-jp@user.com': '~/.signature/vim-jp',
			\ 'vim@user.com'   : '~/.signature/vim',
			\ }
<
	* 送信メールの To の指定送信先/From の送信元別に使用する署名ファイル
	* キーにそのメール・アドレスを、値に署名ファイルを指定
	* 複数設定が有る時のデフォルト署名ファイルはキーに `'*'` を設定する
	* すべての条件に一致する To アドレスがなければ、From のアドレスも確認する
	* 設定がなかったり、指定したファイルがない場合は ~/.signature 使用
	* ~/.signature も無ければ、何も書き込まない

g:notmuch_signature_prev_quote                       *g:notmuch_signature_prev_quote*
	Type: |Number|
	Default: `0`

	* 1 だと返信メールで署名の後に引用文を入力

g:notmuch_signature_prev_forward                    *g:notmuch_signature_prev_forward*
	Type: |Number|
	Default: `0`

	* 1 だと転送メールで署名の後に転送元本文を入力

g:notmuch_subject_length                            *g:notmuch_subject_length*
	Type: |Number|
	Default: なし

	* |{T-WIN}| に表示する Subject ヘッダの内容の幅
	* Subject の内容が長い場合は末尾が切られる
	* 短い場合は末尾が空白で埋められる
	* デフォルトではウィンドウ幅や他に表示される To/From/Date ヘッダの情報がウィ
		ンドウ幅に収まるように計算される

g:notmuch_tmpdir                                     *g:notmuch_tmpdir*
	Type: |String|
	Default: `''`

	* 送信処理などで一時保存が必要な時に使われるフォルダ
	* `''` の時はこのプラグイン保存先の .temp フォルダに保存

g:notmuch_to                                         *g:notmuch_to*
	Type: |List|
	Default: `[]`

	* 検索条件毎の送信先で、条件 1 つに付き
			`[search-term, '送信先']`
		のペアで指定
	* メーリング・リストの投稿用などの設定
	* |search-term| が `'*'` 場合はデフォルト送信先
	* |{F-WIN}| では「|g:notmuch_folders| の |search-term| と意味的に同じか?」ではなく、
		「単純に文字列として部分一致するか?」で判定
	* 他のバッファでは「メールが |search-term| でヒットするか?」で判定

	Example >
		let g:notmuch_to = [
			\ ['folder:.vim'       , 'vim@user.com'],
			\ ['to:vim-jp@user.com', 'vim-jp@user.com'],
		\ ]

g:notmuch_use_commandline                            *g:notmuch_use_commandline*
	Type: |Number|
	Default: `0`

	* GUI でファイル選択時にダイアログを使用可能な環境でもコマンドラインを使用す
	  るか

g:notmuch_view_attachment                            *g:notmuch_view_attachment*
	Type: |String|
	Default: 環境依存

	* open (|notmuch-python-vim-open|) で添付ファイルを開く時に用いるプログラム
	* デフォルトは OS 依存
			--------+----------~
				 OS		| program~
			--------+----------~
			Unix		| `'xdg-open'`
			Windows	| `'start'`
			macOS		| `'open'`
			他			| `''`
			--------+----------~


==============================================================================
                                                    *notmuch-python-vim-command*
コマンド ~
                                                                       *Notmuch*
:Notmuch {subcommand} [{arglist}]
	サブコマンドがなければ、ヘルプ (ここ) を開く

------------------------------------------------------------------------------
                                                 *notmuch-python-vim-subcommand*
サブコマンド ~

                                              *notmuch-python-vim-attach-delete*
attach-delete
	* |{T-WIN}| ではカーソル位置、もしくは選択しているメールに含まれる添
		付ファイルを削除
		次のパートは削除しない
		- HTML パート
		- 暗号化パートやその内部のパート
		- 電子署名パート
	* |{S-WIN}| ではカーソル位置、もしくは選択している添付ファイルを削除
		- text/plain が有れば HTML パートの削除も可能

                                                *notmuch-python-vim-attach-save*
attach-save
	* |{S-WIN}| でカーソル位置、もしくは選択している添付ファイルを保存
	* |{T-WIN}| では「どういった動作が好ましいのか?」の判断が付きかね
		未対応 (特にファイル名が被った時)

                                                      *notmuch-python-vim-close*
close
	* ウィンドウを閉じる
	* |:close| と違い最後のウィンドウでも他のバッファが無ければ Vim 自体を終了する

                                                *notmuch-python-vim-mail-delete*
mail-delete
	* |{T-WIN}| ではカーソル位置、もしくは選択しているメールの元となるメール・
		ファイルを削除
	* |{S-WIN}| では表示しているメール元となるメール・ファイルを削除
	* 実行しても |{T-WIN}| の情報は更新されない
		- 更新するには reload (|notmuch-python-vim-reload|) が必要
	* 複数のメール・ファイルがある場合は、
		- 更新日時
		- ファイル・サイズ
		- パス
		の表示とともに選択

	メール・ファイルが一つの時は、確認メッセージを表示

                                                  *notmuch-python-vim-mail-edit*
mail-edit
	下書きメールやメール・ファイルを開く

                                                *notmuch-python-vim-mail-export*
mail-export
	* メール・ファイルを別ファイルにエクスポート
	* メール・ファイルをコピーするだけなので、ファイルの中身はデコード前の状態

                                               *notmuch-python-vim-mail-forward*
mail-forward
	* 転送メールの編集バッファを開く
	* ヘッダの意味などは |notmuch-python-vim-sendmail| 参照

	NOTE: deoplete.nvim 使用時の注意 (|notmuch-python-vim-deoplete|)

                                                *notmuch-python-vim-mail-import*
mail-import
	* メール・ファイルをインポートする
	* ディレクトリが選ばれた時は、サブフォルダも含めて、そこに含まれるメール・
		ファイルをインポート
	* ファイル/ディレクトリの両選択に対応するため、ダイアログを使用可能な環境で
	  も必ずコマンドライン使用
	* Message-ID ヘッダがなければ、メッセージを表示しインポートしない
	* 実行しても |{T-WIN}| の情報は更新されない
		- 更新するには reload (|notmuch-python-vim-reload|) が必要

                                                  *notmuch-python-vim-mail-info*
mail-info
	|{F-WIN}|	|{T-WIN}| を開く時に用いる |search-term| を表示
	|{T-WIN}|	|search-term| と次の |{S-WIN}| で表示する項目を表示
	|{S-WIN}|	メールの次の情報を表示
							* Message-ID
							* メールに付けられたタグ
							* メール・ファイルのパス
							* メール・ファイルの更新日時
							* メール・ファイルのファイル・サイズ
							* 復号化/電子署名検証処理済ならばその結果

	* ポップアップ対応環境 (|+popupwin|) なら、ポップアップで表示
		- ポップアップの枠のドラッグで移動可能
		- 次の操作で閉じる
			+ C/c/X/x/Q/q/P/p/<Esc> タイプ
			+	カーソル移動
			+	ポップアップ部のクリック
	* ポップアップ未対応環境は、コマンドラインで表示

                                                  *notmuch-python-vim-mail-move*
mail-move [{mailbox}]
	* メール・ファイルを別のメール・フォルダ {mailbox} に移動
	* {mailbox} が無ければコマンドラインで指定になる
		- この指定でも空だとキャンセルになる
	* 複数指定は最初以外を無視する
	* |{T-WIN}| では、カーソル位置、もしくは選択メールの移動
	* 実行しても |{T-WIN}| の情報は更新されない
		- 更新するには reload (|notmuch-python-vim-reload|) が必要

                                                   *notmuch-python-vim-mail-new*
mail-new
	* 新規メールの編集バッファを開く
	* start (|notmuch-python-vim-start|) 未使用でも呼び出し可能
		- mail-send (|notmuch-python-vim-mail-send|) を呼び出し可能にする
	* ヘッダの意味などは |notmuch-python-vim-sendmail| 参照

	NOTE: deoplete.nvim 使用時の注意 (|notmuch-python-vim-deoplete|)

                                               *notmuch-python-vim-mail-reindex*
mail-reindex
	メールを再インデックス

                                                 *notmuch-python-vim-mail-reply*
mail-reply
	* 返信メールの編集バッファを開く
	* ヘッダの意味などは |notmuch-python-vim-sendmail| 参照

	NOTE: deoplete.nvim 使用時の注意 (|notmuch-python-vim-deoplete|)

                                                  *notmuch-python-vim-mail-save*
mail-save
	* |{S-WIN}| で表示しているメールを別ファイルに保存
	* バッファの内容をそのまま保存するので、元のメール・ファイルにどんなヘッダが
		付いていたのかに関係なく、今表示されている内容のみを保存

                                                  *notmuch-python-vim-mail-send*
mail-send
	* メールを |g:notmuch_send_param| にしたがって送信
	* |g:notmuch_send_param| で指定しているプログラムの設定が予め必要
	* 実行しても |{T-WIN}| の情報は更新されない
		- 更新するには reload (|notmuch-python-vim-reload|) が必要
	* バッファの種類によって送信対象になるメールが変わる
		- mail-new (|notmuch-python-vim-mail-new|),
			mail-reply (|notmuch-python-vim-mail-reply|),
			mail-forward (|notmuch-python-vim-mail-forward|) で開いた送信メール
			(|notmuch-python-vim-sendmail|) はそのバッファの内容
		- |{F-WIN}| では
			(folder:draft or folder:.draft or tag:draft) not tag:sent not tag:Trash not tag:Spam
			条件に一致するメール
		- |{T-WIN}| ではスレッド中の
			(folder:draft or folder:.draft or tag:draft) not tag:sent not tag:Trash not tag:Spam
			に一致するメール
		- |{S-WIN}| では表示しているメールが
			(folder:draft or folder:.draft or tag:draft) not tag:sent not tag:Trash not tag:Spam
			に一致するならそのメール
		- |{F-WIN}|, |{T-WIN}|, |{S-WIN}| で実行した時は、メール・ファイルを他のバッファ
			で開いていたり未保存メールは送信対象にならない

                                                       *notmuch-python-vim-mark*
mark
	* Vim の |mark| (|:mark|, m{a-zA-Z}) とは関係がない
	* |{T-WIN}| にてカーソル位置、もしくは選択メールのマーク * をトグル
		mark-command (|notmuch-python-vim-mark-command|) や thread-connect
		(|notmuch-python-vim-thread-connect|) の実行や他の |search-term| で
		|{T-WIN}|を開くとクリアされる
	* 複数選択時、マーク * の ON/OFF の基準はカーソル位置に関係なく選択開始行の
		ON/OFF の状態に従い、ここのメールのマークの ON/OFF 状態は無視される

                                               *notmuch-python-vim-mark-command*
mark-command
	* マークを付けたメールに対して、纏めてサブコマンドを実行する
	* マークはクリアされる
	* 複数のサブコマンドを実行する時の区切り文字は |\r| (<C-V><Enter>:|c_CTRL-v|)
		もしくは <NL> (<C-V><C-J>:|c_CTRL-v|)

                                                       *notmuch-python-vim-open*
open
	各種バッファや添付ファイルを開く
		|{F-WIN}|	カーソル位置の条件で |{T-WIN}| を開きアクティブにする
		|{T-WIN}|	カーソル位置のメールを |{S-WIN}| で開きアクティブにする
							新たなメールが開かれた時にメール末尾まで表示されていれば、
							メールを既読に (unread タグを削除) する
		|{S-WIN}|	カーソル位置次第で次の順序で試みる
								(1) Attach 等のヘッダ (|notmuch_virtual_haeder|) なら、その添付
										ファイルを開く
								(2) ヘッダでない本文部分で添付ファイル名ならそれを開く
								(3) 折りたたみ可能な行なら開閉
								(4) |g:notmuch_open_way| の open キーに設定があれば、それを実行

                                                     *notmuch-python-vim-reload*
reload
	* |{T-WIN}| の情報を更新
	* 一度 |{T-WIN}| を開くと同じ |search-term| では、各種操作で情報が変わっても
		|{T-WIN}| の内容が更新されない
		このコマンドを実行することで更新される
	* 未読/既読等の操作で直ちに |{T-WIN}| バッファのリストから消えてしまうと、
		取り消しずらいのでこのような仕様にしている

                                                        *notmuch-python-vim-run*
run [{arglist}]
	* シェル・プログラムを実行する
	* | をパイプとして使用できない
	* {arglist} に <path:>, <id:> が有ればそれぞれ次に置き換わる
			<path:>	メール・ファイルのフル・パス
			<id:>		メールの Message-ID
		- このためプログラムに <path:>, <id:> それ自体は渡せない
		- リダイレクトを使いたければ、スペースを入れれば良い
	* {arglist} に <path:> が無ければ、省略扱いとして {arglist} の最後に追加

                                                     *notmuch-python-vim-search*
search [|search-term|]
	* Notmuch を用いて検索し、ヒットしたメール一覧を新たな |{T-WIN}| に表示する
	* |search-term| を指定していないと、コマンドラインで指定になる
		- この指定でも空だとキャンセルになる
	* 実行時のコマンドラインにデフォルトで表示される |search-term| は
			|{F-WIN}|		枠のカーソル位置に対応する |g:notmuch_folders| の |search-term|
			|{T-WIN}|/|{S-WIN}| メールに対応した |search-term|
	* 検索の結果ヒットするメールがなければ、メッセージを表示のみおこない、|{T-WIN}|
		を開かない

                                              *notmuch-python-vim-search-thread*
search-thread
	* メールを含むスレッドを新たな |{T-Win}| 枠に表示する

                                                 *notmuch-python-vim-set-attach*
set-attach [{attachment}]
	* 送信メール・バッファ添付ファイルとして {attachment} に変更/追加
	* {attachment} が無ければファイル選択になる
		- この指定でも <Esc> だとキャンセル
			o コマンドラインでは空の入力でもキャンセル
	* カーソル位置が Attach: (|notmuch-pytho-vim-attach|) ヘッダなら変更

                                                *notmuch-python-vim-set-encrypt*
set-encrypt [{encrypt/signature}]
	* 送信メール・バッファの暗号化/電子署名 {encrypt/signature} 設定
	* {encrypt/signature} に指定できるのは大文字小文字の区別なしで次の通り
			------------------+------------------------------------~
			 指定できる文字列-+-意味~
			------------------+------------------------------------~
			Encrypt						| 暗号化する
			Signature					| 電子署名をつける
			S/MIME						| 暗号化/電子署名に S/MIME を用いる
			SMIME 						|
			S-MIME						|
			PGP/MIME					| 暗号化/電子署名に PGP/MIME を用いる
			PGPMIME						|
			PGP-MIME					|
			PGP								| 暗号化/電子署名に PGP を用いる
			------------------------+------------------------------~
		- 暗号化/電子署名の方法が未指定の場合 S/MIME を用いる
	* {encrypt/signature} が無ければ指定になる
		- E/e:   暗号化 (Encrypt) ON/OFF
		- S/s:   電子署名 (Signature) ON/OFF
		- M/m:   暗号化/電子署名の方法 (Method) をサイクリックに切り替え
		- A/a:   バッファへ反映
		- <Esc>: キャンセル
			o コマンドラインでは空の入力でもキャンセル

                                                    *notmuch-python-vim-set-fcc*
set-fcc [{mailbox}]
	* 送信メール・バッファで {mailbox} を Fcc: (|notmuch-pytho-vim-fcc|) に設定
	* {mailbox} が無ければコマンドラインで指定になる
		- この指定でも空だとキャンセルになる

                                                      *notmuch-python-vim-start*
start
	* |{F-WIN}| を開き、|g:notmuch_open_way| で |{T-WIN}| を分割して開く設定ならそ
		れを開く
	* |{T-WIN}| を開いた時 |{S-WIN}| を分割して開く設定ならそれも開く
	* これの実行がなければ、mail-new (|notmuch-python-vim-mail-new|) 以外のサブ
		コマンドは呼び出せない

                                                    *notmuch-python-vim-tag-add*
tag-add [{tags}]
	* メールにタグを追加
	* 実行しても |{T-WIN}| の情報は更新されない
		- 更新するには reload (|notmuch-python-vim-reload|) が必要
	* {tags} を指定していないと、コマンドラインで指定になる
		- この指定でも空だとキャンセルになる
	* mail-new (|notmuch-python-vim-mail-new|),
	* mail-new (|notmuch-python-vim-mail-new|),
		mail-reply (|notmuch-python-vim-mail-reply|),
		mail-forward (|notmuch-python-vim-mail-forward|),
		mail-edit (|notmuch-python-vim-mail-edit|) で開いた送信メールで・バッファで
		は、notmuch database は直ちに反映されず、保存・送信時に反映される
		- 受信メールでは mail-edit (|notmuch-python-vim-mail-edit|) で開いても無視
			される

                                                 *notmuch-python-vim-tag-delete*
tag-delete [{tags}]
	* メールのタグを削除
	* 実行しても |{T-WIN}| の情報は更新されない
		- 更新するには reload (|notmuch-python-vim-reload|) が必要
	* {tags} を指定していないと、コマンドラインで指定になる
		- この指定でも空だとキャンセルになる
	* mail-new (|notmuch-python-vim-mail-new|),
		mail-reply (|notmuch-python-vim-mail-reply|),
		mail-forward (|notmuch-python-vim-mail-forward|),
		mail-edit (|notmuch-python-vim-mail-edit|) で開いた送信メールで・バッファで
		は、notmuch database は直ちに反映されず、保存・送信時に反映される
		- 受信メールでは mail-edit (|notmuch-python-vim-mail-edit|) で開いても無視
			される

                                                 *notmuch-python-vim-tag-toggle*
tag-toggle [{tags}]
	* メールのタグをトグル
	* 実行しても |{T-WIN}| の情報は更新されない
		- 更新するには reload (|notmuch-python-vim-reload|) が必要
	* {tags} を指定していないと、コマンドラインで指定になる
		- この指定でも空だとキャンセルになる
	* mail-new (|notmuch-python-vim-mail-new|),
		mail-reply (|notmuch-python-vim-mail-reply|),
		mail-forward (|notmuch-python-vim-mail-forward|),
		mail-edit (|notmuch-python-vim-mail-edit|) で開いた送信メールで・バッファで
		は、notmuch database は直ちに反映されず、保存・送信時に反映される
		- 受信メールでは mail-edit (|notmuch-python-vim-mail-edit|) で開いても無視
			される

                                             *notmuch-python-vim-thread-connect*
thread-connect
	* mark (|notmuch-python-vim-mark|) されたメールをカーソル位置のメールにスレッ
		ドを繋げる
	* In-Reply-To, Refference ヘッダを編集している
	* mail-reindex (|notmuch-python-vim-mail-reindex|) と reload
		(|notmuch-python-vim-reload|) が行われる

                                                 *notmuch-python-vim-thread-cut*
thread-cut
	* メールのスレッドを切る
	* In-Reply-To, Refference ヘッダを編集している
	* mail-reindex (|notmuch-python-vim-mail-reindex|) と reload
		(|notmuch-python-vim-reload|) が行われる

                                                *notmuch-python-vim-thread-sort*
thread-sort [{list}/{tree} {sorting-way}]
	* |{T-WIN}| で
		{list}/{tree}: 一覧/ツリー表示の指定
									 {sorting-way} が無ければ、ソート方法は変更せず一覧/ツリー表
									 示の切り替えのみ行う
		{sorting-way}: ソート方法の変更
									 {list}/{tree} が無ければ {tree} 扱い
	* {list}/{tree}, {sorting-way} を指定していないと、コマンドラインで指定になる
		- この指定でも空だとキャンセルになる
	* mark (|notmuch-python-vim-mark|) によるマークが削除される

		--------------+--------------~
		{list}/{tree} |   意味~
		--------------+--------------~
		list          | 一覧表示
		tree          | ツリー表示
		--------------+--------------~

		--------------+----------------------------------------------------------~
		{sorting-way} |                   意味~
		--------------+----------------------------------------------------------~
		date          | 日付順
		              | {tree} では同一スレッド中の最新メールの日時が基準
		Date          | 日時逆順
		from          | 送り主順
		              | {tree} では同一スレッドに含まれるメール送信元
		From          | メール送信元逆順
		subject       | Subject 順
		              | Subject そのものではなく |g:notmuch_delete_top_subject| で整形
		              | 済みの |{T-WIN}| に表示されている件名
		              | {tree} ではスレッドトップが基準
		Subject       | Subject 逆順
		--------------+-----------------------------------------------------------~

                                              *notmuch-python-vim-thread-toggle*
thread-toggle
	* メールのスレッドを開閉する
	* 閉じた時はスレッドの先頭選択
	* 開いた時はできるだけ直前のメールを選択、適当なメールがない時は、同一スレッ
		ド内の最後のメールを選択

                                              *notmuch-python-vim-view-previous*
view-previous
	スクリーンに |{S-WIN}| が有れば |{F-WIN}|/|{T-WIN}| がアクティブでも |{S-WIN}| を
	スクロール・アップ

                                           *notmuch-python-vim-view-unread-mail*
view-unread-mail
	* 次の未読メールに移動
	* 現在表示しているメールの未読/既読は変更しない (unread タグの削除しない)

                                           *notmuch-python-vim-view-unread-page*
view-unread-page
	* スクリーンに |{S-WIN}| が有れば |{F-WIN}|/|{T-WIN}| がアクティブでも |{S-WIN}| を
		スクロール・ダウン
	* すでにメールの最後まで表示していれば、既読 (unread タグを削除) にして次の
		未読 (unread タグ付き) メールを開く

==============================================================================
                                                   *notmuch-python-vim-how-make*
作成動機 ~

同種のプラグインとしては、notmuch-vim (https://github.com/felipec/notmuch-vim)
が有るが、
	* 未読メールを読み進めにくい
	* 添付ファイルの削除ができない
	* 添付ファイルを削除済みだと part ???: は出てきても、ファイル名までは解らない
	* 変換できないへッダがあるとメールが見られない
	* text/html のみで text/plain が無いと、それを開くのが面倒
	* text/html を開けないケースが有る (Office365 Outlook の暗号化メール)
	* スレッド構造がわからない
	* 全角の文字幅への考慮が無い←notmuch-thread で各ヘッダ・カラムがずれる
	* メール移動がない
	* 署名の使い分けができない
	* メール数が多い |search-term| だと、新しい順でスクロールさせないと古いメール
		が一覧に出てこず、その為古いメールのアクセスは時間がかかる
	* “Passing an unparsed header field to Mail::Field.new is deprecated and
		will be removed in Mail 2.8.0. Use Mail::Field.parse instead.”と警告が出る
		(メンテナンスされていない?)

他のクライアントとしては、Mutt の virtual-folder だと
	* メールの移動が反映されない
	* 未読等の情報が他の virtual-folder へ直ちに反映されない
	* 返信メールをその返信元と同じフォルダに自動で入れる処理が面倒
	* 送信メール編集中に他のメッセージを表示できない/煩雑

==============================================================================
                                                       *notmuch-python-vim-todo*
TODO ~

	* そのまま転送
		それに関連して返信時に次に対応
		- Resent-From	メール転送時に転送者アドレスを含める
									この場合、From はオリジナルの From のままになる
									ただし、あまり実装されている例は無さそう
		- Resent-Sender	上記の Sender のためのフィールド
		- Resent-To		上記の To のためのフィールド
		- Resent-Cc		上記の Cc のためのフィールド
		- Resent-Bcc	上記の Bcc のためのフィールド
	* 未読・フラグなどを解りやすく→b:notmuch['tags'] を使って notmuch-thread の
		ステータス・ラインに表示しているだけ


==============================================================================
                                                    *notmuch-python-vim-history*
更新履歴 ~

2021/12/26 Ver.0.65 ~
* Fcc の設定する set-fcc (|notmuch-python-vim-set-fcc|) 追加
* 添付ファイルの追加/変更する set-attach (|notmuch-python-vim-set-attach|) 追加
* 暗号化/電子署名の設定する set-encrypt (|notmuch-python-vim-set-encrypt|) 追加
* 可能ならファイル選択時はダイアログを使用する
* |g:notmuch_use_commandline| を追加
	- 上を無視して必ずコマンドラインを使用する

2021/12/24 Ver.0.64 ~
* start (|notmuch-python-vim-start|) しないで mail-new
  (|notmuch-python-vim-mail-new|) し保存するとエラーになるバグ修正


2021/12/23 Ver.0.63 ~
* start (|notmuch-python-vim-start|) しないで mail-new
  (|notmuch-python-vim-mail-new|) した時送信エラーになるバグ修正
* 送信メールバッファ (notmuch-draft) でタグ追加/削除/トグル対応
* 送信メールバッファにもデフォルト・キーマップ
* 添付ファイル名に対しても、iso-2022-jp で送られているにも関わらず、Ⅰといった
  ローマ数字等 iso-2022-jp 範囲外の文字が使われている場合、nkf が実行可能なら
  nkf で変換する
* |{S-WIN}| では Attach: ヘッダが空なら非表示
* 保存された下書きメールでは mail-edit (|notmuch-python-vim-mail-edit|) で開い
  てもヘッダを閉じない

2021/12/21 Ver.0.62 ~
* バグ修正
	- g:notmuch_save_draft (|g:notmuch_save_draft|) が 1 の時に送信時にエラーになる

2021/12/20 Ver.0.60 ~
* バグ修正
	- mail-reply (|notmuch-python-vim-mail-reply|), mail-forward
		(|notmuch-python-vim-mail-forward|) エラー

2021/12/19 Ver.0.59 ~
* スレッド・データ作成をマルチプロセス化などの処理変更←2 割弱高速化
* open (|notmuch-python-vim-open|) に |{S-WIN}| 内の折りたたみの開閉も追加
* OpenPGP, S/MIME の復号・電子署名検証対応
	- OpenPGP 電子署名に対応
		+ gpg が必要
		+ Subject が暗号化されている場合にも対応 (Thunderbird による暗号化等)
		+ PGP/MIME でなく本文に書き込まれている形式にも対応
	- S/MIME 暗号/署名に対応
		+	gpgsm が必要
		+ gpgsm 非対応の RC などの暗号化アルゴリズムには復号・署名検証非対応
* 下書きメールの保存対応
* 他のプラグインと重ならないようにバッファ変数は b:notmuch 辞書に纏めた
* Content-Type: text/html は保存時に、その charset から、HTML パートの中身にある
		- <meta charset=...>
		- <meta http-equiv="Content-Type" content="text/html; charset=...">
	に従う文字コード変換処理追加
* |{F-WIN}| における view-unread-page (|notmuch-python-vim-view-unread-page|) は
	|{S-WIN}| が非表示でも |{T-WIN}| を開き、該当メールの選択までは行うように仕様変更
* ドキュメントに予約扱いとしていた gpg 関係の変数は記載削除
* ポップ・アップ表示の横方向の位置は常に中央
  ↑デフォルトのままだとカーソルが右だと内容がうまく表示されない
* iso-2022-jp で送られているにも関わらず、Ⅰといったローマ数字等 iso-2022-jp
  範囲外の文字が使われている場合、nkf が実行可能なら nkf で変換する
  - ヘッダに対しては未対応
  - nkf が実行不可能なら 0xFFFD で出力 (これまでは削除扱い)
* GB2312 のメールは一律上位互換の GB18030 でデコード処理に
	- Outlook からの日本語メールで文字コード誤認識され、GB2312 で送られるケースが
		多く有り、その文字化け対処も兼ねる
* メール送信時 Message-ID は常につけ直すように仕様変更
	- 他から貼り付けられ、同じ Message-ID のメールを送信させないため
* バグ修正
	- ", ' を含む検索で上手く動作しないケースが有った
		+ 元々検索キーワードで特別な意味を持つ ", (, ) がペアになっているかチェッ
			クする仕様に変更
		+ ペアでないケースはエラー表示し、それ以上の処理はしない
	- message/rfc822 がただの本文扱いになっていた
	- ドキュメントのインデックス修正
	- Message-ID に (, ) が含まれると上手く処理できなかった
	- thread-sort (|notmuch-python-vim-thread-sort|) のスレッド・ツリー構造がおかし
		くなっていた
	- |{S-WIN}| が非表示次のコマンド実行でエラーになった
		+ view-unread-page (|notmuch-python-vim-view-unread-page|)
		+ view-previous (|notmuch-python-vim-view-previous|)
	- 複数メールを選択して次のコマンド実行で、更にタグ無指定でエラーなった
		+ tag-add (|notmuch-python-vim-tag-add|)
		+ tag-delete (|notmuch-python-vim-tag-delete|)
		+ tag-toggle (|notmuch-python-vim-tag-toggle|)
	- |g:notmuch_folder_format| が使えなくなっていた
	- UTF-8 以外のテキスト・ファイルを添付するとエラーになるバグ修正
		→他と同じ様に Base64 で送る

2022/06/06 Ver.0.58 ~
* thread-sort (|notmuch-python-vim-thread-sort|) 追加
* |g:notmuch_make_dump| を追加
* バグ修正
	- ステータス・ラインの日時情報が UNIX タイムのままになっていた
	- 復号化失敗/しなかった時、Content-Disposition: inline であっても暗号データを
		インライン表示していなかった

2021/06/01 Ver.0.573 ~
* view-unread-page (|notmuch-python-vim-view-unread-page|), view-unread-mail
	(|notmuch-python-vim-view-unread-mail|) でエラーになるバグ修正

2021/05/30 Ver.0.572 ~
* syntax を含めるのを忘れていた

2021/05/30 Ver.0.571 ~
* 次のような起動時指定で、エラーになるバグ修正
	$ vim +'Notmuch mail-new'

2021/05/30 Ver.0.57 ~
* search (|notmuch-python-vim-search|) で |search-term| に \, " が含まれるとだめなバグ修正

2021/05/27 Ver.0.56 ~
* バグ修正
	- |{S-WIN}| で複数選択したときの添付ファイル削除が選択した最初と最後のみの削
		除になっていた
	- 暗号化メールののヘッダ (|notmuch_virtual_haeder|) でドキュメントと実際の表示
		に齟齬が有った
* Content-Type: text/???; charset= が存在しない/Python 未対応の文字セットの時、
	エラーではなく警告を出し、文字化けになってもそのまま表示に変更
* スレッドの開閉には thread-toggle (|notmuch-python-vim-thread-toggle|) を作成し
	キーマップ (o) しなおし
* |{S-WIN}| での open (|notmuch-python-vim-open|) 使用時、本文部分で
	- 添付ファイル名ならそれを開く
	- そうでなければ |g:notmuch_open_way| の open キーの値を実行する

2021/05/24 Ver.0.55 ~
* バグ修正
	- |g:notmuch_tmpdir| 設定が無効だった
	- |{S-WIN}| がアクティブな状態で読み進めると、Subject やタグ情報などのバッファ
		変数がうまく更新されていなかった
		→|statusline| での表記も更新されず
* デフォルト一時保存先を temp→.temp に
	- 復号化したファイルの置き場所にもなるので、少しでも見つかりにくくするため
* 外部コマンドの実行は、できるだけ subprocess.Popen からリターン・コードが得られ
	る run に書き換え
* 送信は |g:notmuch_send_param| の実行プログラムが実行可能か? を必ず確認
* mark-command (|notmuch-python-vim-mark-command|) の区切りに <NL> (<C-V><C-J>)
	も可能した
	- |:bar| に有るように元々 <NL> で '|' で代わりにできるため

2021/05/20 Ver.0.54 ~
* 暗号メールは削除できなくする
* 復号化の状態でヘッダ名を変える
	- 電子署名検証未対応なので、それを示すヘッダ名に

2021/05/19 Ver.0.53 ~
* syntax, highlight は syntax/ フォルダのファイルに移動
* 関数内でしか呼ばれない関数は、その呼び出し元に移動
* OpenPGP 暗号化のメール閲覧に対応←GnuPG (gpg) にパスが通っていれば良い
	- 電子署名検証未対応←全て不正扱いになってしまう
* バグ修正
	- mark-command が動いていなかった
	- A, a, u の複数選択のキーマップもれ
	- mail-info で表示する情報に " が含まれているとエラーになる

2021/05/16 Ver.0.52 ~
* |notmuch-python-vim-mail-info| のポップアップ表示は、C/c/X/x/Q/q/P/p/<Esc>
  でも閉じるようにした

2021/05/14 Ver.0.51 ~
* キーマップ修正←ドキュメントと不一致だった

2021/05/13 Ver.0.5 ~
* 取り敢えずドキュメントを含め一通り完成


vim:tw=78:ts=2:ft=help:norl:noet:fen:
